// deno-lint-ignore-file no-irregular-whitespace
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvZ3JhbW15X3R5cGVzQHYzLjE0LjAvbWVzc2FnZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZW5vLWxpbnQtaWdub3JlLWZpbGUgbm8taXJyZWd1bGFyLXdoaXRlc3BhY2VcbmltcG9ydCB0eXBlIHsgQ2hhdCwgVXNlciB9IGZyb20gXCIuL21hbmFnZS50c1wiO1xuaW1wb3J0IHR5cGUgeyBJbmxpbmVLZXlib2FyZE1hcmt1cCB9IGZyb20gXCIuL21hcmt1cC50c1wiO1xuaW1wb3J0IHR5cGUgeyBQYXNzcG9ydERhdGEgfSBmcm9tIFwiLi9wYXNzcG9ydC50c1wiO1xuaW1wb3J0IHR5cGUgeyBJbnZvaWNlLCBSZWZ1bmRlZFBheW1lbnQsIFN1Y2Nlc3NmdWxQYXltZW50IH0gZnJvbSBcIi4vcGF5bWVudC50c1wiO1xuXG50eXBlIE1zZ1dpdGg8UCBleHRlbmRzIGtleW9mIE1lc3NhZ2U+ID0gUmVjb3JkPFAsIE5vbk51bGxhYmxlPE1lc3NhZ2VbUF0+PjtcblxuZXhwb3J0IGRlY2xhcmUgbmFtZXNwYWNlIE1lc3NhZ2Uge1xuICBpbnRlcmZhY2UgU2VydmljZU1lc3NhZ2Uge1xuICAgIC8qKiBVbmlxdWUgbWVzc2FnZSBpZGVudGlmaWVyIGluc2lkZSB0aGlzIGNoYXQgKi9cbiAgICBtZXNzYWdlX2lkOiBudW1iZXI7XG4gICAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIG9mIGEgbWVzc2FnZSB0aHJlYWQgb3IgYSBmb3J1bSB0b3BpYyB0byB3aGljaCB0aGUgbWVzc2FnZSBiZWxvbmdzOyBmb3Igc3VwZXJncm91cHMgb25seSAqL1xuICAgIG1lc3NhZ2VfdGhyZWFkX2lkPzogbnVtYmVyO1xuICAgIC8qKiBTZW5kZXIgb2YgdGhlIG1lc3NhZ2U7IG1heSBiZSBlbXB0eSBmb3IgbWVzc2FnZXMgc2VudCB0byBjaGFubmVscy4gRm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHksIGlmIHRoZSBtZXNzYWdlIHdhcyBzZW50IG9uIGJlaGFsZiBvZiBhIGNoYXQsIHRoZSBmaWVsZCBjb250YWlucyBhIGZha2Ugc2VuZGVyIHVzZXIgaW4gbm9uLWNoYW5uZWwgY2hhdHMgKi9cbiAgICBmcm9tPzogVXNlcjtcbiAgICAvKiogU2VuZGVyIG9mIHRoZSBtZXNzYWdlIHdoZW4gc2VudCBvbiBiZWhhbGYgb2YgYSBjaGF0LiBGb3IgZXhhbXBsZSwgdGhlIHN1cGVyZ3JvdXAgaXRzZWxmIGZvciBtZXNzYWdlcyBzZW50IGJ5IGl0cyBhbm9ueW1vdXMgYWRtaW5pc3RyYXRvcnMgb3IgYSBsaW5rZWQgY2hhbm5lbCBmb3IgbWVzc2FnZXMgYXV0b21hdGljYWxseSBmb3J3YXJkZWQgdG8gdGhlIGNoYW5uZWwncyBkaXNjdXNzaW9uIGdyb3VwLiBGb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgaWYgdGhlIG1lc3NhZ2Ugd2FzIHNlbnQgb24gYmVoYWxmIG9mIGEgY2hhdCwgdGhlIGZpZWxkIGZyb20gY29udGFpbnMgYSBmYWtlIHNlbmRlciB1c2VyIGluIG5vbi1jaGFubmVsIGNoYXRzLiAqL1xuICAgIHNlbmRlcl9jaGF0PzogQ2hhdDtcbiAgICAvKiogRGF0ZSB0aGUgbWVzc2FnZSB3YXMgc2VudCBpbiBVbml4IHRpbWUuIEl0IGlzIGFsd2F5cyBhIHBvc2l0aXZlIG51bWJlciwgcmVwcmVzZW50aW5nIGEgdmFsaWQgZGF0ZS4gKi9cbiAgICBkYXRlOiBudW1iZXI7XG4gICAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBidXNpbmVzcyBjb25uZWN0aW9uIGZyb20gd2hpY2ggdGhlIG1lc3NhZ2Ugd2FzIHJlY2VpdmVkLiBJZiBub24tZW1wdHksIHRoZSBtZXNzYWdlIGJlbG9uZ3MgdG8gYSBjaGF0IG9mIHRoZSBjb3JyZXNwb25kaW5nIGJ1c2luZXNzIGFjY291bnQgdGhhdCBpcyBpbmRlcGVuZGVudCBmcm9tIGFueSBwb3RlbnRpYWwgYm90IGNoYXQgd2hpY2ggbWlnaHQgc2hhcmUgdGhlIHNhbWUgaWRlbnRpZmllci4gKi9cbiAgICBidXNpbmVzc19jb25uZWN0aW9uX2lkPzogc3RyaW5nO1xuICAgIC8qKiBDaGF0IHRoZSBtZXNzYWdlIGJlbG9uZ3MgdG8gKi9cbiAgICBjaGF0OiBDaGF0O1xuICAgIC8qKiBUcnVlLCBpZiB0aGUgbWVzc2FnZSBpcyBzZW50IHRvIGEgZm9ydW0gdG9waWMgKi9cbiAgICBpc190b3BpY19tZXNzYWdlPzogYm9vbGVhbjtcbiAgfVxuICBleHBvcnQgaW50ZXJmYWNlIENvbW1vbk1lc3NhZ2UgZXh0ZW5kcyBTZXJ2aWNlTWVzc2FnZSB7XG4gICAgLyoqIElmIHRoZSBzZW5kZXIgb2YgdGhlIG1lc3NhZ2UgYm9vc3RlZCB0aGUgY2hhdCwgdGhlIG51bWJlciBvZiBib29zdHMgYWRkZWQgYnkgdGhlIHVzZXIgKi9cbiAgICBzZW5kZXJfYm9vc3RfY291bnQ/OiBudW1iZXI7XG4gICAgLyoqIFRoZSBib3QgdGhhdCBhY3R1YWxseSBzZW50IHRoZSBtZXNzYWdlIG9uIGJlaGFsZiBvZiB0aGUgYnVzaW5lc3MgYWNjb3VudC4gQXZhaWxhYmxlIG9ubHkgZm9yIG91dGdvaW5nIG1lc3NhZ2VzIHNlbnQgb24gYmVoYWxmIG9mIHRoZSBjb25uZWN0ZWQgYnVzaW5lc3MgYWNjb3VudC4gKi9cbiAgICBzZW5kZXJfYnVzaW5lc3NfYm90PzogVXNlcjtcbiAgICAvKiogSW5mb3JtYXRpb24gYWJvdXQgdGhlIG9yaWdpbmFsIG1lc3NhZ2UgZm9yIGZvcndhcmRlZCBtZXNzYWdlcyAqL1xuICAgIGZvcndhcmRfb3JpZ2luPzogTWVzc2FnZU9yaWdpbjtcbiAgICAvKiogVHJ1ZSwgaWYgdGhlIG1lc3NhZ2UgaXMgYSBjaGFubmVsIHBvc3QgdGhhdCB3YXMgYXV0b21hdGljYWxseSBmb3J3YXJkZWQgdG8gdGhlIGNvbm5lY3RlZCBkaXNjdXNzaW9uIGdyb3VwICovXG4gICAgaXNfYXV0b21hdGljX2ZvcndhcmQ/OiB0cnVlO1xuICAgIC8qKiBGb3IgcmVwbGllcyBpbiB0aGUgc2FtZSBjaGF0IGFuZCBtZXNzYWdlIHRocmVhZCwgdGhlIG9yaWdpbmFsIG1lc3NhZ2UuIE5vdGUgdGhhdCB0aGUgTWVzc2FnZSBvYmplY3QgaW4gdGhpcyBmaWVsZCB3aWxsIG5vdCBjb250YWluIGZ1cnRoZXIgcmVwbHlfdG9fbWVzc2FnZSBmaWVsZHMgZXZlbiBpZiBpdCBpdHNlbGYgaXMgYSByZXBseS4gKi9cbiAgICByZXBseV90b19tZXNzYWdlPzogUmVwbHlNZXNzYWdlO1xuICAgIC8qKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgbWVzc2FnZSB0aGF0IGlzIGJlaW5nIHJlcGxpZWQgdG8sIHdoaWNoIG1heSBjb21lIGZyb20gYW5vdGhlciBjaGF0IG9yIGZvcnVtIHRvcGljICovXG4gICAgZXh0ZXJuYWxfcmVwbHk/OiBFeHRlcm5hbFJlcGx5SW5mbztcbiAgICAvKiogRm9yIHJlcGxpZXMgdGhhdCBxdW90ZSBwYXJ0IG9mIHRoZSBvcmlnaW5hbCBtZXNzYWdlLCB0aGUgcXVvdGVkIHBhcnQgb2YgdGhlIG1lc3NhZ2UgKi9cbiAgICBxdW90ZT86IFRleHRRdW90ZTtcbiAgICAvKiogRm9yIHJlcGxpZXMgdG8gYSBzdG9yeSwgdGhlIG9yaWdpbmFsIG1lc3NhZ2UgKi9cbiAgICByZXBseV90b19zdG9yeT86IFN0b3J5O1xuICAgIC8qKiBCb3QgdGhyb3VnaCB3aGljaCB0aGUgbWVzc2FnZSB3YXMgc2VudCAqL1xuICAgIHZpYV9ib3Q/OiBVc2VyO1xuICAgIC8qKiBEYXRlIHRoZSBtZXNzYWdlIHdhcyBsYXN0IGVkaXRlZCBpbiBVbml4IHRpbWUgKi9cbiAgICBlZGl0X2RhdGU/OiBudW1iZXI7XG4gICAgLyoqIFRydWUsIGlmIHRoZSBtZXNzYWdlIGNhbid0IGJlIGZvcndhcmRlZCAqL1xuICAgIGhhc19wcm90ZWN0ZWRfY29udGVudD86IHRydWU7XG4gICAgLyoqIFRydWUsIGlmIHRoZSBjYXB0aW9uIG11c3QgYmUgc2hvd24gYWJvdmUgdGhlIG1lc3NhZ2UgbWVkaWEgKi9cbiAgICBzaG93X2NhcHRpb25fYWJvdmVfbWVkaWE/OiB0cnVlO1xuICAgIC8qKiBUcnVlLCBpZiB0aGUgbWVzc2FnZSB3YXMgc2VudCBieSBhbiBpbXBsaWNpdCBhY3Rpb24sIGZvciBleGFtcGxlLCBhcyBhbiBhd2F5IG9yIGEgZ3JlZXRpbmcgYnVzaW5lc3MgbWVzc2FnZSwgb3IgYXMgYSBzY2hlZHVsZWQgbWVzc2FnZSAqL1xuICAgIGlzX2Zyb21fb2ZmbGluZT86IHRydWU7XG4gICAgLyoqIFNpZ25hdHVyZSBvZiB0aGUgcG9zdCBhdXRob3IgZm9yIG1lc3NhZ2VzIGluIGNoYW5uZWxzLCBvciB0aGUgY3VzdG9tIHRpdGxlIG9mIGFuIGFub255bW91cyBncm91cCBhZG1pbmlzdHJhdG9yICovXG4gICAgYXV0aG9yX3NpZ25hdHVyZT86IHN0cmluZztcbiAgICAvKiogT3B0aW9ucyB1c2VkIGZvciBsaW5rIHByZXZpZXcgZ2VuZXJhdGlvbiBmb3IgdGhlIG1lc3NhZ2UsIGlmIGl0IGlzIGEgdGV4dCBtZXNzYWdlIGFuZCBsaW5rIHByZXZpZXcgb3B0aW9ucyB3ZXJlIGNoYW5nZWQgKi9cbiAgICBsaW5rX3ByZXZpZXdfb3B0aW9ucz86IExpbmtQcmV2aWV3T3B0aW9ucztcbiAgICAvKiogVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIG1lc3NhZ2UgZWZmZWN0IGFkZGVkIHRvIHRoZSBtZXNzYWdlICovXG4gICAgZWZmZWN0X2lkPzogc3RyaW5nO1xuICAgIC8qKiBJbmxpbmUga2V5Ym9hcmQgYXR0YWNoZWQgdG8gdGhlIG1lc3NhZ2UuIGxvZ2luX3VybCBidXR0b25zIGFyZSByZXByZXNlbnRlZCBhcyBvcmRpbmFyeSB1cmwgYnV0dG9ucy4gKi9cbiAgICByZXBseV9tYXJrdXA/OiBJbmxpbmVLZXlib2FyZE1hcmt1cDtcbiAgfVxuICBleHBvcnQgaW50ZXJmYWNlIENhcHRpb25hYmxlTWVzc2FnZSBleHRlbmRzIENvbW1vbk1lc3NhZ2Uge1xuICAgIC8qKiBDYXB0aW9uIGZvciB0aGUgYW5pbWF0aW9uLCBhdWRpbywgZG9jdW1lbnQsIHBob3RvLCB2aWRlbyBvciB2b2ljZSAqL1xuICAgIGNhcHRpb24/OiBzdHJpbmc7XG4gICAgLyoqIEZvciBtZXNzYWdlcyB3aXRoIGEgY2FwdGlvbiwgc3BlY2lhbCBlbnRpdGllcyBsaWtlIHVzZXJuYW1lcywgVVJMcywgYm90IGNvbW1hbmRzLCBldGMuIHRoYXQgYXBwZWFyIGluIHRoZSBjYXB0aW9uICovXG4gICAgY2FwdGlvbl9lbnRpdGllcz86IE1lc3NhZ2VFbnRpdHlbXTtcbiAgfVxuICBleHBvcnQgaW50ZXJmYWNlIE1lZGlhTWVzc2FnZSBleHRlbmRzIENhcHRpb25hYmxlTWVzc2FnZSB7XG4gICAgLyoqIFRoZSB1bmlxdWUgaWRlbnRpZmllciBvZiBhIG1lZGlhIG1lc3NhZ2UgZ3JvdXAgdGhpcyBtZXNzYWdlIGJlbG9uZ3MgdG8gKi9cbiAgICBtZWRpYV9ncm91cF9pZD86IHN0cmluZztcbiAgICAvKiogVHJ1ZSwgaWYgdGhlIG1lc3NhZ2UgbWVkaWEgaXMgY292ZXJlZCBieSBhIHNwb2lsZXIgYW5pbWF0aW9uICovXG4gICAgaGFzX21lZGlhX3Nwb2lsZXI/OiB0cnVlO1xuICB9XG5cbiAgZXhwb3J0IHR5cGUgVGV4dE1lc3NhZ2UgPSBDb21tb25NZXNzYWdlICYgTXNnV2l0aDxcInRleHRcIj47XG4gIGV4cG9ydCB0eXBlIEF1ZGlvTWVzc2FnZSA9IENhcHRpb25hYmxlTWVzc2FnZSAmIE1zZ1dpdGg8XCJhdWRpb1wiPjtcbiAgZXhwb3J0IHR5cGUgRG9jdW1lbnRNZXNzYWdlID0gQ2FwdGlvbmFibGVNZXNzYWdlICYgTXNnV2l0aDxcImRvY3VtZW50XCI+O1xuICBleHBvcnQgdHlwZSBBbmltYXRpb25NZXNzYWdlID0gRG9jdW1lbnRNZXNzYWdlICYgTXNnV2l0aDxcImFuaW1hdGlvblwiPjtcbiAgZXhwb3J0IHR5cGUgUGhvdG9NZXNzYWdlID0gTWVkaWFNZXNzYWdlICYgTXNnV2l0aDxcInBob3RvXCI+O1xuICBleHBvcnQgdHlwZSBTdGlja2VyTWVzc2FnZSA9IENvbW1vbk1lc3NhZ2UgJiBNc2dXaXRoPFwic3RpY2tlclwiPjtcbiAgZXhwb3J0IHR5cGUgU3RvcnlNZXNzYWdlID0gQ29tbW9uTWVzc2FnZSAmIE1zZ1dpdGg8XCJzdG9yeVwiPjtcbiAgZXhwb3J0IHR5cGUgVmlkZW9NZXNzYWdlID0gTWVkaWFNZXNzYWdlICYgTXNnV2l0aDxcInZpZGVvXCI+O1xuICBleHBvcnQgdHlwZSBWaWRlb05vdGVNZXNzYWdlID0gQ29tbW9uTWVzc2FnZSAmIE1zZ1dpdGg8XCJ2aWRlb19ub3RlXCI+O1xuICBleHBvcnQgdHlwZSBWb2ljZU1lc3NhZ2UgPSBDYXB0aW9uYWJsZU1lc3NhZ2UgJiBNc2dXaXRoPFwidm9pY2VcIj47XG4gIGV4cG9ydCB0eXBlIENvbnRhY3RNZXNzYWdlID0gQ29tbW9uTWVzc2FnZSAmIE1zZ1dpdGg8XCJjb250YWN0XCI+O1xuICBleHBvcnQgdHlwZSBEaWNlTWVzc2FnZSA9IENvbW1vbk1lc3NhZ2UgJiBNc2dXaXRoPFwiZGljZVwiPjtcbiAgZXhwb3J0IHR5cGUgR2FtZU1lc3NhZ2UgPSBDb21tb25NZXNzYWdlICYgTXNnV2l0aDxcImdhbWVcIj47XG4gIGV4cG9ydCB0eXBlIFBvbGxNZXNzYWdlID0gQ29tbW9uTWVzc2FnZSAmIE1zZ1dpdGg8XCJwb2xsXCI+O1xuICBleHBvcnQgdHlwZSBWZW51ZU1lc3NhZ2UgPSBMb2NhdGlvbk1lc3NhZ2UgJiBNc2dXaXRoPFwidmVudWVcIj47XG4gIGV4cG9ydCB0eXBlIExvY2F0aW9uTWVzc2FnZSA9IENvbW1vbk1lc3NhZ2UgJiBNc2dXaXRoPFwibG9jYXRpb25cIj47XG4gIGV4cG9ydCB0eXBlIFBhaWRNZWRpYU1lc3NhZ2UgPSBDb21tb25NZXNzYWdlICYgTXNnV2l0aDxcInBhaWRfbWVkaWFcIj47XG4gIGV4cG9ydCB0eXBlIE5ld0NoYXRNZW1iZXJzTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcIm5ld19jaGF0X21lbWJlcnNcIj47XG4gIGV4cG9ydCB0eXBlIExlZnRDaGF0TWVtYmVyTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcImxlZnRfY2hhdF9tZW1iZXJcIj47XG4gIGV4cG9ydCB0eXBlIE5ld0NoYXRUaXRsZU1lc3NhZ2UgPSBTZXJ2aWNlTWVzc2FnZSAmIE1zZ1dpdGg8XCJuZXdfY2hhdF90aXRsZVwiPjtcbiAgZXhwb3J0IHR5cGUgTmV3Q2hhdFBob3RvTWVzc2FnZSA9IFNlcnZpY2VNZXNzYWdlICYgTXNnV2l0aDxcIm5ld19jaGF0X3Bob3RvXCI+O1xuICBleHBvcnQgdHlwZSBEZWxldGVDaGF0UGhvdG9NZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwiZGVsZXRlX2NoYXRfcGhvdG9cIj47XG4gIGV4cG9ydCB0eXBlIEdyb3VwQ2hhdENyZWF0ZWRNZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwiZ3JvdXBfY2hhdF9jcmVhdGVkXCI+O1xuICBleHBvcnQgdHlwZSBTdXBlcmdyb3VwQ2hhdENyZWF0ZWQgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJzdXBlcmdyb3VwX2NoYXRfY3JlYXRlZFwiPjtcbiAgZXhwb3J0IHR5cGUgQ2hhbm5lbENoYXRDcmVhdGVkTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcImNoYW5uZWxfY2hhdF9jcmVhdGVkXCI+O1xuICBleHBvcnQgdHlwZSBNZXNzYWdlQXV0b0RlbGV0ZVRpbWVyQ2hhbmdlZE1lc3NhZ2UgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJtZXNzYWdlX2F1dG9fZGVsZXRlX3RpbWVyX2NoYW5nZWRcIj47XG4gIGV4cG9ydCB0eXBlIE1pZ3JhdGVUb0NoYXRJZE1lc3NhZ2UgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJtaWdyYXRlX3RvX2NoYXRfaWRcIj47XG4gIGV4cG9ydCB0eXBlIE1pZ3JhdGVGcm9tQ2hhdElkTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcIm1pZ3JhdGVfZnJvbV9jaGF0X2lkXCI+O1xuICBleHBvcnQgdHlwZSBQaW5uZWRNZXNzYWdlTWVzc2FnZSA9IFNlcnZpY2VNZXNzYWdlICYgTXNnV2l0aDxcInBpbm5lZF9tZXNzYWdlXCI+O1xuICBleHBvcnQgdHlwZSBJbnZvaWNlTWVzc2FnZSA9IFNlcnZpY2VNZXNzYWdlICYgTXNnV2l0aDxcImludm9pY2VcIj47XG4gIGV4cG9ydCB0eXBlIFN1Y2Nlc3NmdWxQYXltZW50TWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcInN1Y2Nlc3NmdWxfcGF5bWVudFwiPjtcbiAgZXhwb3J0IHR5cGUgUmVmdW5kZWRQYXltZW50TWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcInJlZnVuZGVkX3BheW1lbnRcIj47XG4gIGV4cG9ydCB0eXBlIFVzZXJzU2hhcmVkTWVzc2FnZSA9IFNlcnZpY2VNZXNzYWdlICYgTXNnV2l0aDxcInVzZXJzX3NoYXJlZFwiPjtcbiAgZXhwb3J0IHR5cGUgQ2hhdFNoYXJlZE1lc3NhZ2UgPSBTZXJ2aWNlTWVzc2FnZSAmIE1zZ1dpdGg8XCJjaGF0X3NoYXJlZFwiPjtcbiAgZXhwb3J0IHR5cGUgQ29ubmVjdGVkV2Vic2l0ZU1lc3NhZ2UgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJjb25uZWN0ZWRfd2Vic2l0ZVwiPjtcbiAgZXhwb3J0IHR5cGUgV3JpdGVBY2Nlc3NBbGxvd2VkTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcIndyaXRlX2FjY2Vzc19hbGxvd2VkXCI+O1xuICBleHBvcnQgdHlwZSBQYXNzcG9ydERhdGFNZXNzYWdlID0gU2VydmljZU1lc3NhZ2UgJiBNc2dXaXRoPFwicGFzc3BvcnRfZGF0YVwiPjtcbiAgZXhwb3J0IHR5cGUgUHJveGltaXR5QWxlcnRUcmlnZ2VyZWRNZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwicHJveGltaXR5X2FsZXJ0X3RyaWdnZXJlZFwiPjtcbiAgZXhwb3J0IHR5cGUgQm9vc3RBZGRlZE1lc3NhZ2UgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJib29zdF9hZGRlZFwiPjtcbiAgZXhwb3J0IHR5cGUgQ2hhdEJhY2tncm91bmRTZXRNZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwiY2hhdF9iYWNrZ3JvdW5kX3NldFwiPjtcbiAgZXhwb3J0IHR5cGUgRm9ydW1Ub3BpY0NyZWF0ZWRNZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwiZm9ydW1fdG9waWNfY3JlYXRlZFwiPjtcbiAgZXhwb3J0IHR5cGUgRm9ydW1Ub3BpY0VkaXRlZE1lc3NhZ2UgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJmb3J1bV90b3BpY19lZGl0ZWRcIj47XG4gIGV4cG9ydCB0eXBlIEZvcnVtVG9waWNDbG9zZWRNZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwiZm9ydW1fdG9waWNfY2xvc2VkXCI+O1xuICBleHBvcnQgdHlwZSBGb3J1bVRvcGljUmVvcGVuZWRNZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwiZm9ydW1fdG9waWNfcmVvcGVuZWRcIj47XG4gIGV4cG9ydCB0eXBlIEdlbmVyYWxGb3J1bVRvcGljSGlkZGVuTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcImdlbmVyYWxfZm9ydW1fdG9waWNfaGlkZGVuXCI+O1xuICBleHBvcnQgdHlwZSBHZW5lcmFsRm9ydW1Ub3BpY1VuaGlkZGVuTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcImdlbmVyYWxfZm9ydW1fdG9waWNfdW5oaWRkZW5cIj47XG4gIGV4cG9ydCB0eXBlIEdpdmVhd2F5Q3JlYXRlZE1lc3NhZ2UgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJnaXZlYXdheV9jcmVhdGVkXCI+O1xuICBleHBvcnQgdHlwZSBHaXZlYXdheU1lc3NhZ2UgPSBTZXJ2aWNlTWVzc2FnZSAmIE1zZ1dpdGg8XCJnaXZlYXdheVwiPjtcbiAgZXhwb3J0IHR5cGUgR2l2ZWF3YXlXaW5uZXJzTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcImdpdmVhd2F5X3dpbm5lcnNcIj47XG4gIGV4cG9ydCB0eXBlIEdpdmVhd2F5Q29tcGxldGVkTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcImdpdmVhd2F5X2NvbXBsZXRlZFwiPjtcbiAgZXhwb3J0IHR5cGUgVmlkZW9DaGF0U2NoZWR1bGVkTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcInZpZGVvX2NoYXRfc2NoZWR1bGVkXCI+O1xuICBleHBvcnQgdHlwZSBWaWRlb0NoYXRTdGFydGVkTWVzc2FnZSA9XG4gICAgJiBTZXJ2aWNlTWVzc2FnZVxuICAgICYgTXNnV2l0aDxcInZpZGVvX2NoYXRfc3RhcnRlZFwiPjtcbiAgZXhwb3J0IHR5cGUgVmlkZW9DaGF0RW5kZWRNZXNzYWdlID1cbiAgICAmIFNlcnZpY2VNZXNzYWdlXG4gICAgJiBNc2dXaXRoPFwidmlkZW9fY2hhdF9lbmRlZFwiPjtcbiAgZXhwb3J0IHR5cGUgVmlkZW9DaGF0UGFydGljaXBhbnRzSW52aXRlZE1lc3NhZ2UgPVxuICAgICYgU2VydmljZU1lc3NhZ2VcbiAgICAmIE1zZ1dpdGg8XCJ2aWRlb19jaGF0X3BhcnRpY2lwYW50c19pbnZpdGVkXCI+O1xuICBleHBvcnQgdHlwZSBXZWJBcHBEYXRhTWVzc2FnZSA9IFNlcnZpY2VNZXNzYWdlICYgTXNnV2l0aDxcIndlYl9hcHBfZGF0YVwiPjtcbn1cblxudHlwZSBSZXBseU1lc3NhZ2UgPSBNZXNzYWdlICYgeyByZXBseV90b19tZXNzYWdlOiB1bmRlZmluZWQgfTtcblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBtZXNzYWdlLiAqL1xuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlIGV4dGVuZHMgTWVzc2FnZS5NZWRpYU1lc3NhZ2Uge1xuICAvKiogRm9yIHRleHQgbWVzc2FnZXMsIHRoZSBhY3R1YWwgVVRGLTggdGV4dCBvZiB0aGUgbWVzc2FnZSAqL1xuICB0ZXh0Pzogc3RyaW5nO1xuICAvKiogRm9yIHRleHQgbWVzc2FnZXMsIHNwZWNpYWwgZW50aXRpZXMgbGlrZSB1c2VybmFtZXMsIFVSTHMsIGJvdCBjb21tYW5kcywgZXRjLiB0aGF0IGFwcGVhciBpbiB0aGUgdGV4dCAqL1xuICBlbnRpdGllcz86IE1lc3NhZ2VFbnRpdHlbXTtcbiAgLyoqIE1lc3NhZ2UgaXMgYW4gYW5pbWF0aW9uLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgYW5pbWF0aW9uLiBGb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgd2hlbiB0aGlzIGZpZWxkIGlzIHNldCwgdGhlIGRvY3VtZW50IGZpZWxkIHdpbGwgYWxzbyBiZSBzZXQgKi9cbiAgYW5pbWF0aW9uPzogQW5pbWF0aW9uO1xuICAvKiogTWVzc2FnZSBpcyBhbiBhdWRpbyBmaWxlLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZmlsZSAqL1xuICBhdWRpbz86IEF1ZGlvO1xuICAvKiogTWVzc2FnZSBpcyBhIGdlbmVyYWwgZmlsZSwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGZpbGUgKi9cbiAgZG9jdW1lbnQ/OiBEb2N1bWVudDtcbiAgLyoqIE1lc3NhZ2UgaXMgYSBwaG90bywgYXZhaWxhYmxlIHNpemVzIG9mIHRoZSBwaG90byAqL1xuICBwaG90bz86IFBob3RvU2l6ZVtdO1xuICAvKiogTWVzc2FnZSBpcyBhIHN0aWNrZXIsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBzdGlja2VyICovXG4gIHN0aWNrZXI/OiBTdGlja2VyO1xuICAvKiogTWVzc2FnZSBpcyBhIGZvcndhcmRlZCBzdG9yeSAqL1xuICBzdG9yeT86IFN0b3J5O1xuICAvKiogTWVzc2FnZSBpcyBhIHZpZGVvLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdmlkZW8gKi9cbiAgdmlkZW8/OiBWaWRlbztcbiAgLyoqIE1lc3NhZ2UgaXMgYSB2aWRlbyBub3RlLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdmlkZW8gbWVzc2FnZSAqL1xuICB2aWRlb19ub3RlPzogVmlkZW9Ob3RlO1xuICAvKiogTWVzc2FnZSBpcyBhIHZvaWNlIG1lc3NhZ2UsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmaWxlICovXG4gIHZvaWNlPzogVm9pY2U7XG4gIC8qKiBNZXNzYWdlIGlzIGEgc2hhcmVkIGNvbnRhY3QsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb250YWN0ICovXG4gIGNvbnRhY3Q/OiBDb250YWN0O1xuICAvKiogTWVzc2FnZSBpcyBhIGRpY2Ugd2l0aCByYW5kb20gdmFsdWUgKi9cbiAgZGljZT86IERpY2U7XG4gIC8qKiBNZXNzYWdlIGlzIGEgZ2FtZSwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGdhbWUuIE1vcmUgYWJvdXQgZ2FtZXMgwrsgKi9cbiAgZ2FtZT86IEdhbWU7XG4gIC8qKiBNZXNzYWdlIGlzIGEgbmF0aXZlIHBvbGwsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBwb2xsICovXG4gIHBvbGw/OiBQb2xsO1xuICAvKiogTWVzc2FnZSBpcyBhIHZlbnVlLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdmVudWUuIEZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB3aGVuIHRoaXMgZmllbGQgaXMgc2V0LCB0aGUgbG9jYXRpb24gZmllbGQgd2lsbCBhbHNvIGJlIHNldCAqL1xuICB2ZW51ZT86IFZlbnVlO1xuICAvKiogTWVzc2FnZSBpcyBhIHNoYXJlZCBsb2NhdGlvbiwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGxvY2F0aW9uICovXG4gIGxvY2F0aW9uPzogTG9jYXRpb247XG4gIC8qKiBNZXNzYWdlIGNvbnRhaW5zIHBhaWQgbWVkaWE7IGluZm9ybWF0aW9uIGFib3V0IHRoZSBwYWlkIG1lZGlhICovXG4gIHBhaWRfbWVkaWE/OiBQYWlkTWVkaWFJbmZvO1xuICAvKiogTmV3IG1lbWJlcnMgdGhhdCB3ZXJlIGFkZGVkIHRvIHRoZSBncm91cCBvciBzdXBlcmdyb3VwIGFuZCBpbmZvcm1hdGlvbiBhYm91dCB0aGVtICh0aGUgYm90IGl0c2VsZiBtYXkgYmUgb25lIG9mIHRoZXNlIG1lbWJlcnMpICovXG4gIG5ld19jaGF0X21lbWJlcnM/OiBVc2VyW107XG4gIC8qKiBBIG1lbWJlciB3YXMgcmVtb3ZlZCBmcm9tIHRoZSBncm91cCwgaW5mb3JtYXRpb24gYWJvdXQgdGhlbSAodGhpcyBtZW1iZXIgbWF5IGJlIHRoZSBib3QgaXRzZWxmKSAqL1xuICBsZWZ0X2NoYXRfbWVtYmVyPzogVXNlcjtcbiAgLyoqIEEgY2hhdCB0aXRsZSB3YXMgY2hhbmdlZCB0byB0aGlzIHZhbHVlICovXG4gIG5ld19jaGF0X3RpdGxlPzogc3RyaW5nO1xuICAvKiogQSBjaGF0IHBob3RvIHdhcyBjaGFuZ2UgdG8gdGhpcyB2YWx1ZSAqL1xuICBuZXdfY2hhdF9waG90bz86IFBob3RvU2l6ZVtdO1xuICAvKiogU2VydmljZSBtZXNzYWdlOiB0aGUgY2hhdCBwaG90byB3YXMgZGVsZXRlZCAqL1xuICBkZWxldGVfY2hhdF9waG90bz86IHRydWU7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IHRoZSBncm91cCBoYXMgYmVlbiBjcmVhdGVkICovXG4gIGdyb3VwX2NoYXRfY3JlYXRlZD86IHRydWU7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IHRoZSBzdXBlcmdyb3VwIGhhcyBiZWVuIGNyZWF0ZWQuIFRoaXMgZmllbGQgY2FuJ3QgYmUgcmVjZWl2ZWQgaW4gYSBtZXNzYWdlIGNvbWluZyB0aHJvdWdoIHVwZGF0ZXMsIGJlY2F1c2UgYm90IGNhbid0IGJlIGEgbWVtYmVyIG9mIGEgc3VwZXJncm91cCB3aGVuIGl0IGlzIGNyZWF0ZWQuIEl0IGNhbiBvbmx5IGJlIGZvdW5kIGluIHJlcGx5X3RvX21lc3NhZ2UgaWYgc29tZW9uZSByZXBsaWVzIHRvIGEgdmVyeSBmaXJzdCBtZXNzYWdlIGluIGEgZGlyZWN0bHkgY3JlYXRlZCBzdXBlcmdyb3VwLiAqL1xuICBzdXBlcmdyb3VwX2NoYXRfY3JlYXRlZD86IHRydWU7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IHRoZSBjaGFubmVsIGhhcyBiZWVuIGNyZWF0ZWQuIFRoaXMgZmllbGQgY2FuJ3QgYmUgcmVjZWl2ZWQgaW4gYSBtZXNzYWdlIGNvbWluZyB0aHJvdWdoIHVwZGF0ZXMsIGJlY2F1c2UgYm90IGNhbid0IGJlIGEgbWVtYmVyIG9mIGEgY2hhbm5lbCB3aGVuIGl0IGlzIGNyZWF0ZWQuIEl0IGNhbiBvbmx5IGJlIGZvdW5kIGluIHJlcGx5X3RvX21lc3NhZ2UgaWYgc29tZW9uZSByZXBsaWVzIHRvIGEgdmVyeSBmaXJzdCBtZXNzYWdlIGluIGEgY2hhbm5lbC4gKi9cbiAgY2hhbm5lbF9jaGF0X2NyZWF0ZWQ/OiB0cnVlO1xuICAvKiogU2VydmljZSBtZXNzYWdlOiBhdXRvLWRlbGV0ZSB0aW1lciBzZXR0aW5ncyBjaGFuZ2VkIGluIHRoZSBjaGF0ICovXG4gIG1lc3NhZ2VfYXV0b19kZWxldGVfdGltZXJfY2hhbmdlZD86IE1lc3NhZ2VBdXRvRGVsZXRlVGltZXJDaGFuZ2VkO1xuICAvKiogVGhlIGdyb3VwIGhhcyBiZWVuIG1pZ3JhdGVkIHRvIGEgc3VwZXJncm91cCB3aXRoIHRoZSBzcGVjaWZpZWQgaWRlbnRpZmllci4gKi9cbiAgbWlncmF0ZV90b19jaGF0X2lkPzogbnVtYmVyO1xuICAvKiogVGhlIHN1cGVyZ3JvdXAgaGFzIGJlZW4gbWlncmF0ZWQgZnJvbSBhIGdyb3VwIHdpdGggdGhlIHNwZWNpZmllZCBpZGVudGlmaWVyLiAqL1xuICBtaWdyYXRlX2Zyb21fY2hhdF9pZD86IG51bWJlcjtcbiAgLyoqIFNwZWNpZmllZCBtZXNzYWdlIHdhcyBwaW5uZWQuIE5vdGUgdGhhdCB0aGUgTWVzc2FnZSBvYmplY3QgaW4gdGhpcyBmaWVsZCB3aWxsIG5vdCBjb250YWluIGZ1cnRoZXIgcmVwbHlfdG9fbWVzc2FnZSBmaWVsZHMgZXZlbiBpZiBpdCBpdHNlbGYgaXMgYSByZXBseS4gKi9cbiAgcGlubmVkX21lc3NhZ2U/OiBNYXliZUluYWNjZXNzaWJsZU1lc3NhZ2U7XG4gIC8qKiBNZXNzYWdlIGlzIGFuIGludm9pY2UgZm9yIGEgcGF5bWVudCwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGludm9pY2UuIE1vcmUgYWJvdXQgcGF5bWVudHMgwrsgKi9cbiAgaW52b2ljZT86IEludm9pY2U7XG4gIC8qKiBNZXNzYWdlIGlzIGEgc2VydmljZSBtZXNzYWdlIGFib3V0IGEgc3VjY2Vzc2Z1bCBwYXltZW50LCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGF5bWVudC4gTW9yZSBhYm91dCBwYXltZW50cyDCuyAqL1xuICBzdWNjZXNzZnVsX3BheW1lbnQ/OiBTdWNjZXNzZnVsUGF5bWVudDtcbiAgLyoqIE1lc3NhZ2UgaXMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgYSByZWZ1bmRlZCBwYXltZW50LCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGF5bWVudC4gTW9yZSBhYm91dCBwYXltZW50cyDCuyAqL1xuICByZWZ1bmRlZF9wYXltZW50PzogUmVmdW5kZWRQYXltZW50O1xuICAvKiogU2VydmljZSBtZXNzYWdlOiB1c2VycyB3ZXJlIHNoYXJlZCB3aXRoIHRoZSBib3QgKi9cbiAgdXNlcnNfc2hhcmVkPzogVXNlcnNTaGFyZWQ7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IGEgY2hhdCB3YXMgc2hhcmVkIHdpdGggdGhlIGJvdCAqL1xuICBjaGF0X3NoYXJlZD86IENoYXRTaGFyZWQ7XG4gIC8qKiBUaGUgZG9tYWluIG5hbWUgb2YgdGhlIHdlYnNpdGUgb24gd2hpY2ggdGhlIHVzZXIgaGFzIGxvZ2dlZCBpbi4gTW9yZSBhYm91dCBUZWxlZ3JhbSBMb2dpbiDCuyAqL1xuICBjb25uZWN0ZWRfd2Vic2l0ZT86IHN0cmluZztcbiAgLyoqIFNlcnZpY2UgbWVzc2FnZTogdGhlIHVzZXIgYWxsb3dlZCB0aGUgYm90IHRvIHdyaXRlIG1lc3NhZ2VzIGFmdGVyIGFkZGluZyBpdCB0byB0aGUgYXR0YWNobWVudCBvciBzaWRlIG1lbnUsIGxhdW5jaGluZyBhIFdlYiBBcHAgZnJvbSBhIGxpbmssIG9yIGFjY2VwdGluZyBhbiBleHBsaWNpdCByZXF1ZXN0IGZyb20gYSBXZWIgQXBwIHNlbnQgYnkgdGhlIG1ldGhvZCByZXF1ZXN0V3JpdGVBY2Nlc3MgKi9cbiAgd3JpdGVfYWNjZXNzX2FsbG93ZWQ/OiBXcml0ZUFjY2Vzc0FsbG93ZWQ7XG4gIC8qKiBUZWxlZ3JhbSBQYXNzcG9ydCBkYXRhICovXG4gIHBhc3Nwb3J0X2RhdGE/OiBQYXNzcG9ydERhdGE7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2UuIEEgdXNlciBpbiB0aGUgY2hhdCB0cmlnZ2VyZWQgYW5vdGhlciB1c2VyJ3MgcHJveGltaXR5IGFsZXJ0IHdoaWxlIHNoYXJpbmcgTGl2ZSBMb2NhdGlvbi4gKi9cbiAgcHJveGltaXR5X2FsZXJ0X3RyaWdnZXJlZD86IFByb3hpbWl0eUFsZXJ0VHJpZ2dlcmVkO1xuICAvKiogU2VydmljZSBtZXNzYWdlOiB1c2VyIGJvb3N0ZWQgdGhlIGNoYXQgKi9cbiAgYm9vc3RfYWRkZWQ/OiBDaGF0Qm9vc3RBZGRlZDtcbiAgLyogU2VydmljZSBtZXNzYWdlOiBjaGF0IGJhY2tncm91bmQgc2V0ICovXG4gIGNoYXRfYmFja2dyb3VuZF9zZXQ/OiBDaGF0QmFja2dyb3VuZDtcbiAgLyoqIFNlcnZpY2UgbWVzc2FnZTogZm9ydW0gdG9waWMgY3JlYXRlZCAqL1xuICBmb3J1bV90b3BpY19jcmVhdGVkPzogRm9ydW1Ub3BpY0NyZWF0ZWQ7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IGZvcnVtIHRvcGljIGVkaXRlZCAqL1xuICBmb3J1bV90b3BpY19lZGl0ZWQ/OiBGb3J1bVRvcGljRWRpdGVkO1xuICAvKiogU2VydmljZSBtZXNzYWdlOiBmb3J1bSB0b3BpYyBjbG9zZWQgKi9cbiAgZm9ydW1fdG9waWNfY2xvc2VkPzogRm9ydW1Ub3BpY0Nsb3NlZDtcbiAgLyoqIFNlcnZpY2UgbWVzc2FnZTogZm9ydW0gdG9waWMgcmVvcGVuZWQgKi9cbiAgZm9ydW1fdG9waWNfcmVvcGVuZWQ/OiBGb3J1bVRvcGljUmVvcGVuZWQ7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IHRoZSAnR2VuZXJhbCcgZm9ydW0gdG9waWMgaGlkZGVuICovXG4gIGdlbmVyYWxfZm9ydW1fdG9waWNfaGlkZGVuPzogR2VuZXJhbEZvcnVtVG9waWNIaWRkZW47XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IHRoZSAnR2VuZXJhbCcgZm9ydW0gdG9waWMgdW5oaWRkZW4gKi9cbiAgZ2VuZXJhbF9mb3J1bV90b3BpY191bmhpZGRlbj86IEdlbmVyYWxGb3J1bVRvcGljVW5oaWRkZW47XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IGEgc2NoZWR1bGVkIGdpdmVhd2F5IHdhcyBjcmVhdGVkICovXG4gIGdpdmVhd2F5X2NyZWF0ZWQ/OiBHaXZlYXdheUNyZWF0ZWQ7XG4gIC8qKiBUaGUgbWVzc2FnZSBpcyBhIHNjaGVkdWxlZCBnaXZlYXdheSBtZXNzYWdlICovXG4gIGdpdmVhd2F5PzogR2l2ZWF3YXk7XG4gIC8qKiBBIGdpdmVhd2F5IHdpdGggcHVibGljIHdpbm5lcnMgd2FzIGNvbXBsZXRlZCAqL1xuICBnaXZlYXdheV93aW5uZXJzPzogR2l2ZWF3YXlXaW5uZXJzO1xuICAvKiogU2VydmljZSBtZXNzYWdlOiBhIGdpdmVhd2F5IHdpdGhvdXQgcHVibGljIHdpbm5lcnMgd2FzIGNvbXBsZXRlZCAqL1xuICBnaXZlYXdheV9jb21wbGV0ZWQ/OiBHaXZlYXdheUNvbXBsZXRlZDtcbiAgLyoqIFNlcnZpY2UgbWVzc2FnZTogdmlkZW8gY2hhdCBzY2hlZHVsZWQgKi9cbiAgdmlkZW9fY2hhdF9zY2hlZHVsZWQ/OiBWaWRlb0NoYXRTY2hlZHVsZWQ7XG4gIC8qKiBTZXJ2aWNlIG1lc3NhZ2U6IHZpZGVvIGNoYXQgc3RhcnRlZCAqL1xuICB2aWRlb19jaGF0X3N0YXJ0ZWQ/OiBWaWRlb0NoYXRTdGFydGVkO1xuICAvKiogU2VydmljZSBtZXNzYWdlOiB2aWRlbyBjaGF0IGVuZGVkICovXG4gIHZpZGVvX2NoYXRfZW5kZWQ/OiBWaWRlb0NoYXRFbmRlZDtcbiAgLyoqIFNlcnZpY2UgbWVzc2FnZTogbmV3IHBhcnRpY2lwYW50cyBpbnZpdGVkIHRvIGEgdmlkZW8gY2hhdCAqL1xuICB2aWRlb19jaGF0X3BhcnRpY2lwYW50c19pbnZpdGVkPzogVmlkZW9DaGF0UGFydGljaXBhbnRzSW52aXRlZDtcbiAgLyoqIFNlcnZpY2UgbWVzc2FnZTogZGF0YSBzZW50IGJ5IGEgV2ViIEFwcCAqL1xuICB3ZWJfYXBwX2RhdGE/OiBXZWJBcHBEYXRhO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIHVuaXF1ZSBtZXNzYWdlIGlkZW50aWZpZXIuICovXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VJZCB7XG4gIC8qKiBVbmlxdWUgbWVzc2FnZSBpZGVudGlmaWVyICovXG4gIG1lc3NhZ2VfaWQ6IG51bWJlcjtcbn1cblxuLyoqIERlc2NyaWJlcyBhbiBpbmxpbmUgbWVzc2FnZSBzZW50IGJ5IGEgV2ViIEFwcCBvbiBiZWhhbGYgb2YgYSB1c2VyLiAqL1xuZXhwb3J0IGludGVyZmFjZSBTZW50V2ViQXBwTWVzc2FnZSB7XG4gIC8qKiBJZGVudGlmaWVyIG9mIHRoZSBzZW50IGlubGluZSBtZXNzYWdlLiBBdmFpbGFibGUgb25seSBpZiB0aGVyZSBpcyBhbiBpbmxpbmUga2V5Ym9hcmQgYXR0YWNoZWQgdG8gdGhlIG1lc3NhZ2UuICovXG4gIGlubGluZV9tZXNzYWdlX2lkOiBzdHJpbmc7XG59XG5cbi8qKiBUaGlzIG9iamVjdCBkZXNjcmliZXMgYSBtZXNzYWdlIHRoYXQgd2FzIGRlbGV0ZWQgb3IgaXMgb3RoZXJ3aXNlIGluYWNjZXNzaWJsZSB0byB0aGUgYm90LiAqL1xuZXhwb3J0IGludGVyZmFjZSBJbmFjY2Vzc2libGVNZXNzYWdlIGV4dGVuZHNcbiAgT21pdDxcbiAgICAvLyBUeXBlU2NyaXB0IGNhbm5vdCBkaXNjcmltaW5hdGUgdW5pb24gdHlwZXMgYmFzZWQgb24gYDBgIGFuZCBgbnVtYmVyYCBzb1xuICAgIC8vIHdlIHdvcmsgYXJvdW5kIHRoaXMgYnkgaW5jbHVkaW5nIGFsbCBvdGhlciBwcm9wZXJ0aWVzIGhlcmUuIFRoaXMgbW9zdGx5XG4gICAgLy8gbmVnYXRlcyB0aGUgYmVuZWZpdCBvZiBoYXZpbmcgdGhpcyBpbnRlcmZhY2UgaW4gdGhlIGZpcnN0IHBsYWNlLCBidXQgbm90XG4gICAgLy8gZXh0ZW5kaW5nIE1lc3NhZ2UgaXMgbm90IHZlcnkgZXJnb25vbWljIHRvIHVzZS4gSWYgeW91IGhhdmUgYSBiZXR0ZXIgaWRlYVxuICAgIC8vIGhvdyB0byBtb2RlbCB0aGlzLCBwbGVhc2UgbGV0IHVzIGtub3chXG4gICAgTWVzc2FnZSxcbiAgICBcImNoYXRcIiB8IFwibWVzc2FnZV9pZFwiIHwgXCJkYXRlXCJcbiAgPiB7XG4gIC8qKiBDaGF0IHRoZSBtZXNzYWdlIGJlbG9uZ2VkIHRvICovXG4gIGNoYXQ6IENoYXQ7XG4gIC8qKiBVbmlxdWUgbWVzc2FnZSBpZGVudGlmaWVyIGluc2lkZSB0aGUgY2hhdCAqL1xuICBtZXNzYWdlX2lkOiBudW1iZXI7XG4gIC8qKiBBbHdheXMgMC4gVGhlIGZpZWxkIGNhbiBiZSB1c2VkIHRvIGRpZmZlcmVudGlhdGUgcmVndWxhciBhbmQgaW5hY2Nlc3NpYmxlIG1lc3NhZ2VzLiAqL1xuICBkYXRlOiAwO1xufVxuXG4vKiogVGhpcyBvYmplY3QgZGVzY3JpYmVzIGEgbWVzc2FnZSB0aGF0IGNhbiBiZSBpbmFjY2Vzc2libGUgdG8gdGhlIGJvdC4gSXQgY2FuIGJlIG9uZSBvZlxuXG4tIE1lc3NhZ2Vcbi0gSW5hY2Nlc3NpYmxlTWVzc2FnZSAqL1xuZXhwb3J0IHR5cGUgTWF5YmVJbmFjY2Vzc2libGVNZXNzYWdlID0gTWVzc2FnZSB8IEluYWNjZXNzaWJsZU1lc3NhZ2U7XG5cbi8qKiBUaGUgQm90IEFQSSBzdXBwb3J0cyBiYXNpYyBmb3JtYXR0aW5nIGZvciBtZXNzYWdlcy4gWW91IGNhbiB1c2UgYm9sZCwgaXRhbGljLCB1bmRlcmxpbmVkLCBzdHJpa2V0aHJvdWdoLCBzcG9pbGVyIHRleHQsIGJsb2NrIHF1b3RhdGlvbnMgYXMgd2VsbCBhcyBpbmxpbmUgbGlua3MgYW5kIHByZS1mb3JtYXR0ZWQgY29kZSBpbiB5b3VyIGJvdHMnIG1lc3NhZ2VzLiBUZWxlZ3JhbSBjbGllbnRzIHdpbGwgcmVuZGVyIHRoZW0gYWNjb3JkaW5nbHkuIFlvdSBjYW4gc3BlY2lmeSB0ZXh0IGVudGl0aWVzIGRpcmVjdGx5LCBvciB1c2UgbWFya2Rvd24tc3R5bGUgb3IgSFRNTC1zdHlsZSBmb3JtYXR0aW5nLlxuXG5Ob3RlIHRoYXQgVGVsZWdyYW0gY2xpZW50cyB3aWxsIGRpc3BsYXkgYW4gKiphbGVydCoqIHRvIHRoZSB1c2VyIGJlZm9yZSBvcGVuaW5nIGFuIGlubGluZSBsaW5rICgnT3BlbiB0aGlzIGxpbms/JyB0b2dldGhlciB3aXRoIHRoZSBmdWxsIFVSTCkuXG5cbk1lc3NhZ2UgZW50aXRpZXMgY2FuIGJlIG5lc3RlZCwgcHJvdmlkaW5nIGZvbGxvd2luZyByZXN0cmljdGlvbnMgYXJlIG1ldDpcbi0gSWYgdHdvIGVudGl0aWVzIGhhdmUgY29tbW9uIGNoYXJhY3RlcnMsIHRoZW4gb25lIG9mIHRoZW0gaXMgZnVsbHkgY29udGFpbmVkIGluc2lkZSBhbm90aGVyLlxuLSBib2xkLCBpdGFsaWMsIHVuZGVybGluZSwgc3RyaWtldGhyb3VnaCwgYW5kIHNwb2lsZXIgZW50aXRpZXMgY2FuIGNvbnRhaW4gYW5kIGNhbiBiZSBwYXJ0IG9mIGFueSBvdGhlciBlbnRpdGllcywgZXhjZXB0IHByZSBhbmQgY29kZS5cbi0gYmxvY2txdW90ZSBhbmQgZXhwYW5kYWJsZV9ibG9ja3F1b3RlIGVudGl0aWVzIGNhbid0IGJlIG5lc3RlZC5cbi0gQWxsIG90aGVyIGVudGl0aWVzIGNhbid0IGNvbnRhaW4gZWFjaCBvdGhlci5cblxuTGlua3MgYHRnOi8vdXNlcj9pZD08dXNlcl9pZD5gIGNhbiBiZSB1c2VkIHRvIG1lbnRpb24gYSB1c2VyIGJ5IHRoZWlyIGlkZW50aWZpZXIgd2l0aG91dCB1c2luZyBhIHVzZXJuYW1lLiBQbGVhc2Ugbm90ZTpcblxuLSBUaGVzZSBsaW5rcyB3aWxsIHdvcmsgb25seSBpZiB0aGV5IGFyZSB1c2VkIGluc2lkZSBhbiBpbmxpbmUgbGluayBvciBpbiBhbiBpbmxpbmUga2V5Ym9hcmQgYnV0dG9uLiBGb3IgZXhhbXBsZSwgdGhleSB3aWxsIG5vdCB3b3JrLCB3aGVuIHVzZWQgaW4gYSBtZXNzYWdlIHRleHQuXG4tIFVubGVzcyB0aGUgdXNlciBpcyBhIG1lbWJlciBvZiB0aGUgY2hhdCB3aGVyZSB0aGV5IHdlcmUgbWVudGlvbmVkLCB0aGVzZSBtZW50aW9ucyBhcmUgb25seSBndWFyYW50ZWVkIHRvIHdvcmsgaWYgdGhlIHVzZXIgaGFzIGNvbnRhY3RlZCB0aGUgYm90IGluIHByaXZhdGUgaW4gdGhlIHBhc3Qgb3IgaGFzIHNlbnQgYSBjYWxsYmFjayBxdWVyeSB0byB0aGUgYm90IHZpYSBhbiBpbmxpbmUgYnV0dG9uIGFuZCBkb2Vzbid0IGhhdmUgRm9yd2FyZGVkIE1lc3NhZ2VzIHByaXZhY3kgZW5hYmxlZCBmb3IgdGhlIGJvdC5cblxuWW91IGNhbiBmaW5kIHRoZSBsaXN0IG9mIHByb2dyYW1taW5nIGFuZCBtYXJrdXAgbGFuZ3VhZ2VzIGZvciB3aGljaCBzeW50YXggaGlnaGxpZ2h0aW5nIGlzIHN1cHBvcnRlZCBhdCBbbGlicHJpc21hI3N1cHBvcnRlZC1sYW5ndWFnZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9UZWxlZ3JhbU1lc3Nlbmdlci9saWJwcmlzbWEjc3VwcG9ydGVkLWxhbmd1YWdlcykuXG5cbiMjIyMgTWFya2Rvd25WMiBzdHlsZVxuVG8gdXNlIHRoaXMgbW9kZSwgcGFzcyAqTWFya2Rvd25WMiogaW4gdGhlICpwYXJzZV9tb2RlKiBmaWVsZC4gVXNlIHRoZSBmb2xsb3dpbmcgc3ludGF4IGluIHlvdXIgbWVzc2FnZTpcblxuYGBgXG4qYm9sZCBcXCp0ZXh0KlxuX2l0YWxpYyBcXCp0ZXh0X1xuX191bmRlcmxpbmVfX1xufnN0cmlrZXRocm91Z2h+XG58fHNwb2lsZXJ8fFxuKmJvbGQgX2l0YWxpYyBib2xkIH5pdGFsaWMgYm9sZCBzdHJpa2V0aHJvdWdoIHx8aXRhbGljIGJvbGQgc3RyaWtldGhyb3VnaCBzcG9pbGVyfHx+IF9fdW5kZXJsaW5lIGl0YWxpYyBib2xkX19fIGJvbGQqXG5baW5saW5lIFVSTF0oaHR0cDovL3d3dy5leGFtcGxlLmNvbS8pXG5baW5saW5lIG1lbnRpb24gb2YgYSB1c2VyXSh0ZzovL3VzZXI/aWQ9MTIzNDU2Nzg5KVxuIVvwn5GNXSh0ZzovL2Vtb2ppP2lkPTUzNjgzMjQxNzA2NzEyMDIyODYpXG5gaW5saW5lIGZpeGVkLXdpZHRoIGNvZGVgXG5g4oCLYOKAi2BcbnByZS1mb3JtYXR0ZWQgZml4ZWQtd2lkdGggY29kZSBibG9ja1xuYOKAi2DigItgXG5g4oCLYOKAi2BweXRob25cbnByZS1mb3JtYXR0ZWQgZml4ZWQtd2lkdGggY29kZSBibG9jayB3cml0dGVuIGluIHRoZSBQeXRob24gcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VcbmDigItg4oCLYFxuPkJsb2NrIHF1b3RhdGlvbiBzdGFydGVkXG4+QmxvY2sgcXVvdGF0aW9uIGNvbnRpbnVlZFxuPkJsb2NrIHF1b3RhdGlvbiBjb250aW51ZWRcbj5CbG9jayBxdW90YXRpb24gY29udGludWVkXG4+VGhlIGxhc3QgbGluZSBvZiB0aGUgYmxvY2sgcXVvdGF0aW9uXG4qKio+VGhlIHNlY29uZCBleHBhbmRhYmxlIGJsb2NrIHF1b3RhdGlvbiBzdGFydGVkIHJpZ2h0IGFmdGVyIHRoZSBwcmV2aW91c1xuPkl0IGlzIHNlcGFyYXRlZCBmcm9tIHRoZSBwcmV2aW91cyBibG9jayBxdW90YXRpb24gYnkgYW4gZW1wdHkgYm9sZCBlbnRpdHlcbj5FeHBhbmRhYmxlIGJsb2NrIHF1b3RhdGlvbiBjb250aW51ZWRcbj5IaWRkZW4gYnkgZGVmYXVsdCBwYXJ0IG9mIHRoZSBleHBhbmRhYmxlIGJsb2NrIHF1b3RhdGlvbiBzdGFydGVkXG4+RXhwYW5kYWJsZSBibG9jayBxdW90YXRpb24gY29udGludWVkXG4+VGhlIGxhc3QgbGluZSBvZiB0aGUgZXhwYW5kYWJsZSBibG9jayBxdW90YXRpb24gd2l0aCB0aGUgZXhwYW5kYWJpbGl0eSBtYXJrfHxcbmBgYFxuUGxlYXNlIG5vdGU6XG5cbi0gQW55IGNoYXJhY3RlciB3aXRoIGNvZGUgYmV0d2VlbiAxIGFuZCAxMjYgaW5jbHVzaXZlbHkgY2FuIGJlIGVzY2FwZWQgYW55d2hlcmUgd2l0aCBhIHByZWNlZGluZyAnXFwnIGNoYXJhY3RlciwgaW4gd2hpY2ggY2FzZSBpdCBpcyB0cmVhdGVkIGFzIGFuIG9yZGluYXJ5IGNoYXJhY3RlciBhbmQgbm90IGEgcGFydCBvZiB0aGUgbWFya3VwLiBUaGlzIGltcGxpZXMgdGhhdCAnXFwnIGNoYXJhY3RlciB1c3VhbGx5IG11c3QgYmUgZXNjYXBlZCB3aXRoIGEgcHJlY2VkaW5nICdcXCcgY2hhcmFjdGVyLlxuLSBJbnNpZGUgYHByZWAgYW5kIGBjb2RlYCBlbnRpdGllcywgYWxsICdgJyBhbmQgJ1xcJyBjaGFyYWN0ZXJzIG11c3QgYmUgZXNjYXBlZCB3aXRoIGEgcHJlY2VkaW5nICdcXCcgY2hhcmFjdGVyLlxuLSBJbnNpZGUgdGhlIGAoLi4uKWAgcGFydCBvZiB0aGUgaW5saW5lIGxpbmsgYW5kIGN1c3RvbSBlbW9qaSBkZWZpbml0aW9uLCBhbGwgJyknIGFuZCAnXFwnIG11c3QgYmUgZXNjYXBlZCB3aXRoIGEgcHJlY2VkaW5nICdcXCcgY2hhcmFjdGVyLlxuLSBJbiBhbGwgb3RoZXIgcGxhY2VzIGNoYXJhY3RlcnMgJ18nLCAnKicsICdbJywgJ10nLCAnKCcsICcpJywgJ34nLCAnYCcsICc+JywgJyMnLCAnKycsICctJywgJz0nLCAnfCcsICd7JywgJ30nLCAnLicsICchJyBtdXN0IGJlIGVzY2FwZWQgd2l0aCB0aGUgcHJlY2VkaW5nIGNoYXJhY3RlciAnXFwnLlxuLSBJbiBjYXNlIG9mIGFtYmlndWl0eSBiZXR3ZWVuIGBpdGFsaWNgIGFuZCBgdW5kZXJsaW5lYCBlbnRpdGllcyBgX19gIGlzIGFsd2F5cyBncmVhZGlseSB0cmVhdGVkIGZyb20gbGVmdCB0byByaWdodCBhcyBiZWdpbm5pbmcgb3IgZW5kIG9mIGFuIGB1bmRlcmxpbmVgIGVudGl0eSwgc28gaW5zdGVhZCBvZiBgX19faXRhbGljIHVuZGVybGluZV9fX2AgdXNlIGBfX19pdGFsaWMgdW5kZXJsaW5lXyoqX19gLCBhZGRpbmcgYW4gZW1wdHkgYm9sZCBlbnRpdHkgYXMgYSBzZXBhcmF0b3IuXG4tIEEgdmFsaWQgZW1vamkgbXVzdCBiZSBwcm92aWRlZCBhcyBhbiBhbHRlcm5hdGl2ZSB2YWx1ZSBmb3IgdGhlIGN1c3RvbSBlbW9qaS4gVGhlIGVtb2ppIHdpbGwgYmUgc2hvd24gaW5zdGVhZCBvZiB0aGUgY3VzdG9tIGVtb2ppIGluIHBsYWNlcyB3aGVyZSBhIGN1c3RvbSBlbW9qaSBjYW5ub3QgYmUgZGlzcGxheWVkIChlLmcuLCBzeXN0ZW0gbm90aWZpY2F0aW9ucykgb3IgaWYgdGhlIG1lc3NhZ2UgaXMgZm9yd2FyZGVkIGJ5IGEgbm9uLXByZW1pdW0gdXNlci4gSXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIHRoZSBlbW9qaSBmcm9tIHRoZSBlbW9qaSBmaWVsZCBvZiB0aGUgY3VzdG9tIGVtb2ppIHN0aWNrZXIuXG4tIEN1c3RvbSBlbW9qaSBlbnRpdGllcyBjYW4gb25seSBiZSB1c2VkIGJ5IGJvdHMgdGhhdCBwdXJjaGFzZWQgYWRkaXRpb25hbCB1c2VybmFtZXMgb24gRnJhZ21lbnQuXG5cbiMjIyMgSFRNTCBzdHlsZVxuVG8gdXNlIHRoaXMgbW9kZSwgcGFzcyAqSFRNTCogaW4gdGhlICpwYXJzZV9tb2RlKiBmaWVsZC4gVGhlIGZvbGxvd2luZyB0YWdzIGFyZSBjdXJyZW50bHkgc3VwcG9ydGVkOlxuXG5gYGBodG1sXG48Yj5ib2xkPC9iPiwgPHN0cm9uZz5ib2xkPC9zdHJvbmc+XG48aT5pdGFsaWM8L2k+LCA8ZW0+aXRhbGljPC9lbT5cbjx1PnVuZGVybGluZTwvdT4sIDxpbnM+dW5kZXJsaW5lPC9pbnM+XG48cz5zdHJpa2V0aHJvdWdoPC9zPiwgPHN0cmlrZT5zdHJpa2V0aHJvdWdoPC9zdHJpa2U+LCA8ZGVsPnN0cmlrZXRocm91Z2g8L2RlbD5cbjxzcGFuIGNsYXNzPVwidGctc3BvaWxlclwiPnNwb2lsZXI8L3NwYW4+LCA8dGctc3BvaWxlcj5zcG9pbGVyPC90Zy1zcG9pbGVyPlxuPGI+Ym9sZCA8aT5pdGFsaWMgYm9sZCA8cz5pdGFsaWMgYm9sZCBzdHJpa2V0aHJvdWdoIDxzcGFuIGNsYXNzPVwidGctc3BvaWxlclwiPml0YWxpYyBib2xkIHN0cmlrZXRocm91Z2ggc3BvaWxlcjwvc3Bhbj48L3M+IDx1PnVuZGVybGluZSBpdGFsaWMgYm9sZDwvdT48L2k+IGJvbGQ8L2I+XG48YSBocmVmPVwiaHR0cDovL3d3dy5leGFtcGxlLmNvbS9cIj5pbmxpbmUgVVJMPC9hPlxuPGEgaHJlZj1cInRnOi8vdXNlcj9pZD0xMjM0NTY3ODlcIj5pbmxpbmUgbWVudGlvbiBvZiBhIHVzZXI8L2E+XG48dGctZW1vamkgZW1vamktaWQ9XCI1MzY4MzI0MTcwNjcxMjAyMjg2XCI+8J+RjTwvdGctZW1vamk+XG48Y29kZT5pbmxpbmUgZml4ZWQtd2lkdGggY29kZTwvY29kZT5cbjxwcmU+cHJlLWZvcm1hdHRlZCBmaXhlZC13aWR0aCBjb2RlIGJsb2NrPC9wcmU+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtcHl0aG9uXCI+cHJlLWZvcm1hdHRlZCBmaXhlZC13aWR0aCBjb2RlIGJsb2NrIHdyaXR0ZW4gaW4gdGhlIFB5dGhvbiBwcm9ncmFtbWluZyBsYW5ndWFnZTwvY29kZT48L3ByZT5cbjxibG9ja3F1b3RlPkJsb2NrIHF1b3RhdGlvbiBzdGFydGVkXFxuQmxvY2sgcXVvdGF0aW9uIGNvbnRpbnVlZFxcblRoZSBsYXN0IGxpbmUgb2YgdGhlIGJsb2NrIHF1b3RhdGlvbjwvYmxvY2txdW90ZT5cbjxibG9ja3F1b3RlIGV4cGFuZGFibGU+RXhwYW5kYWJsZSBibG9jayBxdW90YXRpb24gc3RhcnRlZFxcbkV4cGFuZGFibGUgYmxvY2sgcXVvdGF0aW9uIGNvbnRpbnVlZFxcbkV4cGFuZGFibGUgYmxvY2sgcXVvdGF0aW9uIGNvbnRpbnVlZFxcbkhpZGRlbiBieSBkZWZhdWx0IHBhcnQgb2YgdGhlIGJsb2NrIHF1b3RhdGlvbiBzdGFydGVkXFxuRXhwYW5kYWJsZSBibG9jayBxdW90YXRpb24gY29udGludWVkXFxuVGhlIGxhc3QgbGluZSBvZiB0aGUgYmxvY2sgcXVvdGF0aW9uPC9ibG9ja3F1b3RlPlxuYGBgXG5QbGVhc2Ugbm90ZTpcblxuLSBPbmx5IHRoZSB0YWdzIG1lbnRpb25lZCBhYm92ZSBhcmUgY3VycmVudGx5IHN1cHBvcnRlZC5cbi0gQWxsIGA8YCwgYD5gIGFuZCBgJmAgc3ltYm9scyB0aGF0IGFyZSBub3QgYSBwYXJ0IG9mIGEgdGFnIG9yIGFuIEhUTUwgZW50aXR5IG11c3QgYmUgcmVwbGFjZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyBIVE1MIGVudGl0aWVzIChgPGAgd2l0aCBgJmx0O2AsIGA+YCB3aXRoIGAmZ3Q7YCBhbmQgYCZgIHdpdGggYCZhbXA7YCkuXG4tIEFsbCBudW1lcmljYWwgSFRNTCBlbnRpdGllcyBhcmUgc3VwcG9ydGVkLlxuLSBUaGUgQVBJIGN1cnJlbnRseSBzdXBwb3J0cyBvbmx5IHRoZSBmb2xsb3dpbmcgbmFtZWQgSFRNTCBlbnRpdGllczogYCZsdDtgLCBgJmd0O2AsIGAmYW1wO2AgYW5kIGAmcXVvdDtgLlxuLSBVc2UgbmVzdGVkIGBwcmVgIGFuZCBgY29kZWAgdGFncywgdG8gZGVmaW5lIHByb2dyYW1taW5nIGxhbmd1YWdlIGZvciBwcmUgZW50aXR5LlxuLSBQcm9ncmFtbWluZyBsYW5ndWFnZSBjYW4ndCBiZSBzcGVjaWZpZWQgZm9yIHN0YW5kYWxvbmUgYGNvZGVgIHRhZ3MuXG4tIEEgdmFsaWQgZW1vamkgbXVzdCBiZSB1c2VkIGFzIHRoZSBjb250ZW50IG9mIHRoZSB0Zy1lbW9qaSB0YWcuIFRoZSBlbW9qaSB3aWxsIGJlIHNob3duIGluc3RlYWQgb2YgdGhlIGN1c3RvbSBlbW9qaSBpbiBwbGFjZXMgd2hlcmUgYSBjdXN0b20gZW1vamkgY2Fubm90IGJlIGRpc3BsYXllZCAoZS5nLiwgc3lzdGVtIG5vdGlmaWNhdGlvbnMpIG9yIGlmIHRoZSBtZXNzYWdlIGlzIGZvcndhcmRlZCBieSBhIG5vbi1wcmVtaXVtIHVzZXIuIEl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSB0aGUgZW1vamkgZnJvbSB0aGUgZW1vamkgZmllbGQgb2YgdGhlIGN1c3RvbSBlbW9qaSBzdGlja2VyLlxuLSBDdXN0b20gZW1vamkgZW50aXRpZXMgY2FuIG9ubHkgYmUgdXNlZCBieSBib3RzIHRoYXQgcHVyY2hhc2VkIGFkZGl0aW9uYWwgdXNlcm5hbWVzIG9uIEZyYWdtZW50LlxuXG4jIyMjIE1hcmtkb3duIHN0eWxlXG5UaGlzIGlzIGEgbGVnYWN5IG1vZGUsIHJldGFpbmVkIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LiBUbyB1c2UgdGhpcyBtb2RlLCBwYXNzICpNYXJrZG93biogaW4gdGhlICpwYXJzZV9tb2RlKiBmaWVsZC4gVXNlIHRoZSBmb2xsb3dpbmcgc3ludGF4IGluIHlvdXIgbWVzc2FnZTpcblxuYGBgXG4qYm9sZCB0ZXh0KlxuX2l0YWxpYyB0ZXh0X1xuW2lubGluZSBVUkxdKGh0dHA6Ly93d3cuZXhhbXBsZS5jb20vKVxuW2lubGluZSBtZW50aW9uIG9mIGEgdXNlcl0odGc6Ly91c2VyP2lkPTEyMzQ1Njc4OSlcbmBpbmxpbmUgZml4ZWQtd2lkdGggY29kZWBcbmDigItg4oCLYFxucHJlLWZvcm1hdHRlZCBmaXhlZC13aWR0aCBjb2RlIGJsb2NrXG5g4oCLYOKAi2BcbmDigItg4oCLYHB5dGhvblxucHJlLWZvcm1hdHRlZCBmaXhlZC13aWR0aCBjb2RlIGJsb2NrIHdyaXR0ZW4gaW4gdGhlIFB5dGhvbiBwcm9ncmFtbWluZyBsYW5ndWFnZVxuYOKAi2DigItgXG5gYGBcblBsZWFzZSBub3RlOlxuXG4tIEVudGl0aWVzIG11c3Qgbm90IGJlIG5lc3RlZCwgdXNlIHBhcnNlIG1vZGUgTWFya2Rvd25WMiBpbnN0ZWFkLlxuLSBUaGVyZSBpcyBubyB3YXkgdG8gc3BlY2lmeSDigJx1bmRlcmxpbmXigJ0sIOKAnHN0cmlrZXRocm91Z2jigJ0sIOKAnHNwb2lsZXLigJ0sIOKAnGJsb2NrcXVvdGXigJ0sIOKAnGV4cGFuZGFibGVfYmxvY2txdW90ZeKAnSBhbmQg4oCcY3VzdG9tX2Vtb2pp4oCdIGVudGl0aWVzLCB1c2UgcGFyc2UgbW9kZSBNYXJrZG93blYyIGluc3RlYWQuXG4tIFRvIGVzY2FwZSBjaGFyYWN0ZXJzICdfJywgJyonLCAnYCcsICdbJyBvdXRzaWRlIG9mIGFuIGVudGl0eSwgcHJlcGVuZCB0aGUgY2hhcmFjdGVycyAnXFwnIGJlZm9yZSB0aGVtLlxuLSBFc2NhcGluZyBpbnNpZGUgZW50aXRpZXMgaXMgbm90IGFsbG93ZWQsIHNvIGVudGl0eSBtdXN0IGJlIGNsb3NlZCBmaXJzdCBhbmQgcmVvcGVuZWQgYWdhaW46IHVzZSBgX3NuYWtlX1xcX19jYXNlX2AgZm9yIGl0YWxpYyBgc25ha2VfY2FzZWAgYW5kIGAqMipcXCoqMj00KmAgZm9yIGJvbGQgYDIqMj00YC4gKi9cbmV4cG9ydCB0eXBlIFBhcnNlTW9kZSA9IFwiTWFya2Rvd25cIiB8IFwiTWFya2Rvd25WMlwiIHwgXCJIVE1MXCI7XG5cbmV4cG9ydCBkZWNsYXJlIG5hbWVzcGFjZSBNZXNzYWdlRW50aXR5IHtcbiAgaW50ZXJmYWNlIEFic3RyYWN0TWVzc2FnZUVudGl0eSB7XG4gICAgLyoqIFR5cGUgb2YgdGhlIGVudGl0eS4gQ3VycmVudGx5LCBjYW4gYmUg4oCcbWVudGlvbuKAnSAoQHVzZXJuYW1lKSwg4oCcaGFzaHRhZ+KAnSAoI2hhc2h0YWcpLCDigJxjYXNodGFn4oCdICgkVVNEKSwg4oCcYm90X2NvbW1hbmTigJ0gKC9zdGFydEBqb2JzX2JvdCksIOKAnHVybOKAnSAoaHR0cHM6Ly90ZWxlZ3JhbS5vcmcpLCDigJxlbWFpbOKAnSAoZG8tbm90LXJlcGx5QHRlbGVncmFtLm9yZyksIOKAnHBob25lX251bWJlcuKAnSAoKzEtMjEyLTU1NS0wMTIzKSwg4oCcYm9sZOKAnSAoYm9sZCB0ZXh0KSwg4oCcaXRhbGlj4oCdIChpdGFsaWMgdGV4dCksIOKAnHVuZGVybGluZeKAnSAodW5kZXJsaW5lZCB0ZXh0KSwg4oCcc3RyaWtldGhyb3VnaOKAnSAoc3RyaWtldGhyb3VnaCB0ZXh0KSwg4oCcc3BvaWxlcuKAnSAoc3BvaWxlciBtZXNzYWdlKSwg4oCcYmxvY2txdW90ZeKAnSAoYmxvY2sgcXVvdGF0aW9uKSwg4oCcZXhwYW5kYWJsZV9ibG9ja3F1b3Rl4oCdIChjb2xsYXBzZWQtYnktZGVmYXVsdCBibG9jayBxdW90YXRpb24pLCDigJxjb2Rl4oCdIChtb25vd2lkdGggc3RyaW5nKSwg4oCccHJl4oCdIChtb25vd2lkdGggYmxvY2spLCDigJx0ZXh0X2xpbmvigJ0gKGZvciBjbGlja2FibGUgdGV4dCBVUkxzKSwg4oCcdGV4dF9tZW50aW9u4oCdIChmb3IgdXNlcnMgd2l0aG91dCB1c2VybmFtZXMpLCDigJxjdXN0b21fZW1vamnigJ0gKGZvciBpbmxpbmUgY3VzdG9tIGVtb2ppIHN0aWNrZXJzKSAqL1xuICAgIHR5cGU6IHN0cmluZztcbiAgICAvKiogT2Zmc2V0IGluIFVURi0xNiBjb2RlIHVuaXRzIHRvIHRoZSBzdGFydCBvZiB0aGUgZW50aXR5ICovXG4gICAgb2Zmc2V0OiBudW1iZXI7XG4gICAgLyoqIExlbmd0aCBvZiB0aGUgZW50aXR5IGluIFVURi0xNiBjb2RlIHVuaXRzICovXG4gICAgbGVuZ3RoOiBudW1iZXI7XG4gIH1cbiAgZXhwb3J0IGludGVyZmFjZSBDb21tb25NZXNzYWdlRW50aXR5IGV4dGVuZHMgQWJzdHJhY3RNZXNzYWdlRW50aXR5IHtcbiAgICB0eXBlOlxuICAgICAgfCBcIm1lbnRpb25cIlxuICAgICAgfCBcImhhc2h0YWdcIlxuICAgICAgfCBcImNhc2h0YWdcIlxuICAgICAgfCBcImJvdF9jb21tYW5kXCJcbiAgICAgIHwgXCJ1cmxcIlxuICAgICAgfCBcImVtYWlsXCJcbiAgICAgIHwgXCJwaG9uZV9udW1iZXJcIlxuICAgICAgfCBcImJvbGRcIlxuICAgICAgfCBcIml0YWxpY1wiXG4gICAgICB8IFwidW5kZXJsaW5lXCJcbiAgICAgIHwgXCJzdHJpa2V0aHJvdWdoXCJcbiAgICAgIHwgXCJzcG9pbGVyXCJcbiAgICAgIHwgXCJibG9ja3F1b3RlXCJcbiAgICAgIHwgXCJleHBhbmRhYmxlX2Jsb2NrcXVvdGVcIlxuICAgICAgfCBcImNvZGVcIjtcbiAgfVxuICBleHBvcnQgaW50ZXJmYWNlIFByZU1lc3NhZ2VFbnRpdHkgZXh0ZW5kcyBBYnN0cmFjdE1lc3NhZ2VFbnRpdHkge1xuICAgIHR5cGU6IFwicHJlXCI7XG4gICAgLyoqIEZvciDigJxwcmXigJ0gb25seSwgdGhlIHByb2dyYW1taW5nIGxhbmd1YWdlIG9mIHRoZSBlbnRpdHkgdGV4dCAqL1xuICAgIGxhbmd1YWdlPzogc3RyaW5nO1xuICB9XG4gIGV4cG9ydCBpbnRlcmZhY2UgVGV4dExpbmtNZXNzYWdlRW50aXR5IGV4dGVuZHMgQWJzdHJhY3RNZXNzYWdlRW50aXR5IHtcbiAgICB0eXBlOiBcInRleHRfbGlua1wiO1xuICAgIC8qKiBGb3Ig4oCcdGV4dF9saW5r4oCdIG9ubHksIFVSTCB0aGF0IHdpbGwgYmUgb3BlbmVkIGFmdGVyIHVzZXIgdGFwcyBvbiB0aGUgdGV4dCAqL1xuICAgIHVybDogc3RyaW5nO1xuICB9XG4gIGV4cG9ydCBpbnRlcmZhY2UgVGV4dE1lbnRpb25NZXNzYWdlRW50aXR5IGV4dGVuZHMgQWJzdHJhY3RNZXNzYWdlRW50aXR5IHtcbiAgICB0eXBlOiBcInRleHRfbWVudGlvblwiO1xuICAgIC8qKiBGb3Ig4oCcdGV4dF9tZW50aW9u4oCdIG9ubHksIHRoZSBtZW50aW9uZWQgdXNlciAqL1xuICAgIHVzZXI6IFVzZXI7XG4gIH1cbiAgZXhwb3J0IGludGVyZmFjZSBDdXN0b21FbW9qaU1lc3NhZ2VFbnRpdHkgZXh0ZW5kcyBBYnN0cmFjdE1lc3NhZ2VFbnRpdHkge1xuICAgIHR5cGU6IFwiY3VzdG9tX2Vtb2ppXCI7XG4gICAgLyoqIEZvciDigJxjdXN0b21fZW1vamnigJ0gb25seSwgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGN1c3RvbSBlbW9qaS4gVXNlIGdldEN1c3RvbUVtb2ppU3RpY2tlcnMgdG8gZ2V0IGZ1bGwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHN0aWNrZXIgKi9cbiAgICBjdXN0b21fZW1vamlfaWQ6IHN0cmluZztcbiAgfVxufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBvbmUgc3BlY2lhbCBlbnRpdHkgaW4gYSB0ZXh0IG1lc3NhZ2UuIEZvciBleGFtcGxlLCBoYXNodGFncywgdXNlcm5hbWVzLCBVUkxzLCBldGMuICovXG5leHBvcnQgdHlwZSBNZXNzYWdlRW50aXR5ID1cbiAgfCBNZXNzYWdlRW50aXR5LkNvbW1vbk1lc3NhZ2VFbnRpdHlcbiAgfCBNZXNzYWdlRW50aXR5LkN1c3RvbUVtb2ppTWVzc2FnZUVudGl0eVxuICB8IE1lc3NhZ2VFbnRpdHkuUHJlTWVzc2FnZUVudGl0eVxuICB8IE1lc3NhZ2VFbnRpdHkuVGV4dExpbmtNZXNzYWdlRW50aXR5XG4gIHwgTWVzc2FnZUVudGl0eS5UZXh0TWVudGlvbk1lc3NhZ2VFbnRpdHk7XG5cbi8qKiBUaGlzIG9iamVjdCBjb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcXVvdGVkIHBhcnQgb2YgYSBtZXNzYWdlIHRoYXQgaXMgcmVwbGllZCB0byBieSB0aGUgZ2l2ZW4gbWVzc2FnZS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVGV4dFF1b3RlIHtcbiAgLyoqIFRleHQgb2YgdGhlIHF1b3RlZCBwYXJ0IG9mIGEgbWVzc2FnZSB0aGF0IGlzIHJlcGxpZWQgdG8gYnkgdGhlIGdpdmVuIG1lc3NhZ2UgKi9cbiAgdGV4dDogc3RyaW5nO1xuICAvKiogU3BlY2lhbCBlbnRpdGllcyB0aGF0IGFwcGVhciBpbiB0aGUgcXVvdGUuIEN1cnJlbnRseSwgb25seSBib2xkLCBpdGFsaWMsIHVuZGVybGluZSwgc3RyaWtldGhyb3VnaCwgc3BvaWxlciwgYW5kIGN1c3RvbV9lbW9qaSBlbnRpdGllcyBhcmUga2VwdCBpbiBxdW90ZXMuICovXG4gIGVudGl0aWVzPzogTWVzc2FnZUVudGl0eVtdO1xuICAvKiogQXBwcm94aW1hdGUgcXVvdGUgcG9zaXRpb24gaW4gdGhlIG9yaWdpbmFsIG1lc3NhZ2UgaW4gVVRGLTE2IGNvZGUgdW5pdHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBzZW5kZXIgKi9cbiAgcG9zaXRpb246IG51bWJlcjtcbiAgLyoqIFRydWUsIGlmIHRoZSBxdW90ZSB3YXMgY2hvc2VuIG1hbnVhbGx5IGJ5IHRoZSBtZXNzYWdlIHNlbmRlci4gT3RoZXJ3aXNlLCB0aGUgcXVvdGUgd2FzIGFkZGVkIGF1dG9tYXRpY2FsbHkgYnkgdGhlIHNlcnZlci4gKi9cbiAgaXNfbWFudWFsPzogdHJ1ZTtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IGNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IGEgbWVzc2FnZSB0aGF0IGlzIGJlaW5nIHJlcGxpZWQgdG8sIHdoaWNoIG1heSBjb21lIGZyb20gYW5vdGhlciBjaGF0IG9yIGZvcnVtIHRvcGljLiAqL1xuZXhwb3J0IGludGVyZmFjZSBFeHRlcm5hbFJlcGx5SW5mbyB7XG4gIC8qKiBPcmlnaW4gb2YgdGhlIG1lc3NhZ2UgcmVwbGllZCB0byBieSB0aGUgZ2l2ZW4gbWVzc2FnZSAqL1xuICBvcmlnaW46IE1lc3NhZ2VPcmlnaW47XG4gIC8qKiBDaGF0IHRoZSBvcmlnaW5hbCBtZXNzYWdlIGJlbG9uZ3MgdG8uIEF2YWlsYWJsZSBvbmx5IGlmIHRoZSBjaGF0IGlzIGEgc3VwZXJncm91cCBvciBhIGNoYW5uZWwuICovXG4gIGNoYXQ/OiBDaGF0O1xuICAvKiogVW5pcXVlIG1lc3NhZ2UgaWRlbnRpZmllciBpbnNpZGUgdGhlIG9yaWdpbmFsIGNoYXQuIEF2YWlsYWJsZSBvbmx5IGlmIHRoZSBvcmlnaW5hbCBjaGF0IGlzIGEgc3VwZXJncm91cCBvciBhIGNoYW5uZWwuICovXG4gIG1lc3NhZ2VfaWQ/OiBudW1iZXI7XG4gIC8qKiBPcHRpb25zIHVzZWQgZm9yIGxpbmsgcHJldmlldyBnZW5lcmF0aW9uIGZvciB0aGUgb3JpZ2luYWwgbWVzc2FnZSwgaWYgaXQgaXMgYSB0ZXh0IG1lc3NhZ2UgKi9cbiAgbGlua19wcmV2aWV3X29wdGlvbnM/OiBMaW5rUHJldmlld09wdGlvbnM7XG4gIC8qKiBNZXNzYWdlIGlzIGFuIGFuaW1hdGlvbiwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGFuaW1hdGlvbiAqL1xuICBhbmltYXRpb24/OiBBbmltYXRpb247XG4gIC8qKiBNZXNzYWdlIGlzIGFuIGF1ZGlvIGZpbGUsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmaWxlICovXG4gIGF1ZGlvPzogQXVkaW87XG4gIC8qKiBNZXNzYWdlIGlzIGEgZ2VuZXJhbCBmaWxlLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZmlsZSAqL1xuICBkb2N1bWVudD86IERvY3VtZW50O1xuICAvKiogTWVzc2FnZSBpcyBhIHBob3RvLCBhdmFpbGFibGUgc2l6ZXMgb2YgdGhlIHBob3RvICovXG4gIHBob3RvPzogUGhvdG9TaXplW107XG4gIC8qKiBNZXNzYWdlIGlzIGEgc3RpY2tlciwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHN0aWNrZXIgKi9cbiAgc3RpY2tlcj86IFN0aWNrZXI7XG4gIC8qKiBNZXNzYWdlIGlzIGEgZm9yd2FyZGVkIHN0b3J5ICovXG4gIHN0b3J5PzogU3Rvcnk7XG4gIC8qKiBNZXNzYWdlIGlzIGEgdmlkZW8sIGluZm9ybWF0aW9uIGFib3V0IHRoZSB2aWRlbyAqL1xuICB2aWRlbz86IFZpZGVvO1xuICAvKiogTWVzc2FnZSBpcyBhIHZpZGVvIG5vdGUsIGluZm9ybWF0aW9uIGFib3V0IHRoZSB2aWRlbyBtZXNzYWdlICovXG4gIHZpZGVvX25vdGU/OiBWaWRlb05vdGU7XG4gIC8qKiBNZXNzYWdlIGlzIGEgdm9pY2UgbWVzc2FnZSwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGZpbGUgKi9cbiAgdm9pY2U/OiBWb2ljZTtcbiAgLyoqIFRydWUsIGlmIHRoZSBtZXNzYWdlIG1lZGlhIGlzIGNvdmVyZWQgYnkgYSBzcG9pbGVyIGFuaW1hdGlvbiAqL1xuICBoYXNfbWVkaWFfc3BvaWxlcj86IHRydWU7XG4gIC8qKiBNZXNzYWdlIGlzIGEgc2hhcmVkIGNvbnRhY3QsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb250YWN0ICovXG4gIGNvbnRhY3Q/OiBDb250YWN0O1xuICAvKiogTWVzc2FnZSBpcyBhIGRpY2Ugd2l0aCByYW5kb20gdmFsdWUgKi9cbiAgZGljZT86IERpY2U7XG4gIC8qKiBNZXNzYWdlIGlzIGEgZ2FtZSwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGdhbWUuIE1vcmUgYWJvdXQgZ2FtZXMgwrsgKi9cbiAgZ2FtZT86IEdhbWU7XG4gIC8qKiBNZXNzYWdlIGlzIGEgc2NoZWR1bGVkIGdpdmVhd2F5LCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZ2l2ZWF3YXkgKi9cbiAgZ2l2ZWF3YXk/OiBHaXZlYXdheTtcbiAgLyoqIEEgZ2l2ZWF3YXkgd2l0aCBwdWJsaWMgd2lubmVycyB3YXMgY29tcGxldGVkICovXG4gIGdpdmVhd2F5X3dpbm5lcnM/OiBHaXZlYXdheVdpbm5lcnM7XG4gIC8qKiBNZXNzYWdlIGlzIGFuIGludm9pY2UgZm9yIGEgcGF5bWVudCwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGludm9pY2UuIE1vcmUgYWJvdXQgcGF5bWVudHMgwrsgKi9cbiAgaW52b2ljZT86IEludm9pY2U7XG4gIC8qKiBNZXNzYWdlIGlzIGEgc2hhcmVkIGxvY2F0aW9uLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbG9jYXRpb24gKi9cbiAgbG9jYXRpb24/OiBMb2NhdGlvbjtcbiAgLyoqIE1lc3NhZ2UgY29udGFpbnMgcGFpZCBtZWRpYTsgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHBhaWQgbWVkaWEgKi9cbiAgcGFpZF9tZWRpYT86IFBhaWRNZWRpYUluZm87XG4gIC8qKiBNZXNzYWdlIGlzIGEgbmF0aXZlIHBvbGwsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBwb2xsICovXG4gIHBvbGw/OiBQb2xsO1xuICAvKiogTWVzc2FnZSBpcyBhIHZlbnVlLCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdmVudWUgKi9cbiAgdmVudWU/OiBWZW51ZTtcbn1cblxuLyoqIERlc2NyaWJlcyByZXBseSBwYXJhbWV0ZXJzIGZvciB0aGUgbWVzc2FnZSB0aGF0IGlzIGJlaW5nIHNlbnQuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlcGx5UGFyYW1ldGVycyB7XG4gIC8qKiBJZGVudGlmaWVyIG9mIHRoZSBtZXNzYWdlIHRoYXQgd2lsbCBiZSByZXBsaWVkIHRvIGluIHRoZSBjdXJyZW50IGNoYXQsIG9yIGluIHRoZSBjaGF0IGNoYXRfaWQgaWYgaXQgaXMgc3BlY2lmaWVkICovXG4gIG1lc3NhZ2VfaWQ6IG51bWJlcjtcbiAgLyoqIElmIHRoZSBtZXNzYWdlIHRvIGJlIHJlcGxpZWQgdG8gaXMgZnJvbSBhIGRpZmZlcmVudCBjaGF0LCB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIGNoYXQgb3IgdXNlcm5hbWUgb2YgdGhlIGNoYW5uZWwgKGluIHRoZSBmb3JtYXQgQGNoYW5uZWx1c2VybmFtZSkuIE5vdCBzdXBwb3J0ZWQgZm9yIG1lc3NhZ2VzIHNlbnQgb24gYmVoYWxmIG9mIGEgYnVzaW5lc3MgYWNjb3VudC4gKi9cbiAgY2hhdF9pZD86IG51bWJlciB8IHN0cmluZztcbiAgLyoqIFBhc3MgVHJ1ZSBpZiB0aGUgbWVzc2FnZSBzaG91bGQgYmUgc2VudCBldmVuIGlmIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSB0byBiZSByZXBsaWVkIHRvIGlzIG5vdCBmb3VuZDsgY2FuIGJlIHVzZWQgb25seSBmb3IgcmVwbGllcyBpbiB0aGUgc2FtZSBjaGF0IGFuZCBmb3J1bSB0b3BpYy4gQWx3YXlzIFRydWUgZm9yIG1lc3NhZ2VzIHNlbnQgb24gYmVoYWxmIG9mIGEgYnVzaW5lc3MgYWNjb3VudC4gKi9cbiAgYWxsb3dfc2VuZGluZ193aXRob3V0X3JlcGx5PzogYm9vbGVhbjtcbiAgLyoqIFF1b3RlZCBwYXJ0IG9mIHRoZSBtZXNzYWdlIHRvIGJlIHJlcGxpZWQgdG87IDAtMTAyNCBjaGFyYWN0ZXJzIGFmdGVyIGVudGl0aWVzIHBhcnNpbmcuIFRoZSBxdW90ZSBtdXN0IGJlIGFuIGV4YWN0IHN1YnN0cmluZyBvZiB0aGUgbWVzc2FnZSB0byBiZSByZXBsaWVkIHRvLCBpbmNsdWRpbmcgYm9sZCwgaXRhbGljLCB1bmRlcmxpbmUsIHN0cmlrZXRocm91Z2gsIHNwb2lsZXIsIGFuZCBjdXN0b21fZW1vamkgZW50aXRpZXMuIFRoZSBtZXNzYWdlIHdpbGwgZmFpbCB0byBzZW5kIGlmIHRoZSBxdW90ZSBpc24ndCBmb3VuZCBpbiB0aGUgb3JpZ2luYWwgbWVzc2FnZS4gKi9cbiAgcXVvdGU/OiBzdHJpbmc7XG4gIC8qKiBNb2RlIGZvciBwYXJzaW5nIGVudGl0aWVzIGluIHRoZSBxdW90ZS4gU2VlIGZvcm1hdHRpbmcgb3B0aW9ucyBmb3IgbW9yZSBkZXRhaWxzLiAqL1xuICBxdW90ZV9wYXJzZV9tb2RlPzogc3RyaW5nO1xuICAvKiogQSBKU09OLXNlcmlhbGl6ZWQgbGlzdCBvZiBzcGVjaWFsIGVudGl0aWVzIHRoYXQgYXBwZWFyIGluIHRoZSBxdW90ZS4gSXQgY2FuIGJlIHNwZWNpZmllZCBpbnN0ZWFkIG9mIHF1b3RlX3BhcnNlX21vZGUuICovXG4gIHF1b3RlX2VudGl0aWVzPzogTWVzc2FnZUVudGl0eVtdO1xuICAvKiogUG9zaXRpb24gb2YgdGhlIHF1b3RlIGluIHRoZSBvcmlnaW5hbCBtZXNzYWdlIGluIFVURi0xNiBjb2RlIHVuaXRzICovXG4gIHF1b3RlX3Bvc2l0aW9uPzogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgZGVzY3JpYmVzIHRoZSBvcmlnaW4gb2YgYSBtZXNzYWdlLiBJdCBjYW4gYmUgb25lIG9mXG5cbi0gTWVzc2FnZU9yaWdpblVzZXJcbi0gTWVzc2FnZU9yaWdpbkhpZGRlblVzZXJcbi0gTWVzc2FnZU9yaWdpbkNoYXRcbi0gTWVzc2FnZU9yaWdpbkNoYW5uZWwgKi9cbmV4cG9ydCB0eXBlIE1lc3NhZ2VPcmlnaW4gPVxuICB8IE1lc3NhZ2VPcmlnaW5Vc2VyXG4gIHwgTWVzc2FnZU9yaWdpbkhpZGRlblVzZXJcbiAgfCBNZXNzYWdlT3JpZ2luQ2hhdFxuICB8IE1lc3NhZ2VPcmlnaW5DaGFubmVsO1xuXG4vKiogVGhlIG1lc3NhZ2Ugd2FzIG9yaWdpbmFsbHkgc2VudCBieSBhIGtub3duIHVzZXIuICovXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VPcmlnaW5Vc2VyIHtcbiAgLyoqIFR5cGUgb2YgdGhlIG1lc3NhZ2Ugb3JpZ2luLCBhbHdheXMg4oCcdXNlcuKAnSAqL1xuICB0eXBlOiBcInVzZXJcIjtcbiAgLyoqIERhdGUgdGhlIG1lc3NhZ2Ugd2FzIHNlbnQgb3JpZ2luYWxseSBpbiBVbml4IHRpbWUgKi9cbiAgZGF0ZTogbnVtYmVyO1xuICAvKiogVXNlciB0aGF0IHNlbnQgdGhlIG1lc3NhZ2Ugb3JpZ2luYWxseSAqL1xuICBzZW5kZXJfdXNlcjogVXNlcjtcbn1cblxuLyoqIFRoZSBtZXNzYWdlIHdhcyBvcmlnaW5hbGx5IHNlbnQgYnkgYW4gdW5rbm93biB1c2VyLiAqL1xuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlT3JpZ2luSGlkZGVuVXNlciB7XG4gIC8qKiBUeXBlIG9mIHRoZSBtZXNzYWdlIG9yaWdpbiwgYWx3YXlzIOKAnGhpZGRlbl91c2Vy4oCdICovXG4gIHR5cGU6IFwiaGlkZGVuX3VzZXJcIjtcbiAgLyoqIERhdGUgdGhlIG1lc3NhZ2Ugd2FzIHNlbnQgb3JpZ2luYWxseSBpbiBVbml4IHRpbWUgKi9cbiAgZGF0ZTogbnVtYmVyO1xuICAvKiogTmFtZSBvZiB0aGUgdXNlciB0aGF0IHNlbnQgdGhlIG1lc3NhZ2Ugb3JpZ2luYWxseSAqL1xuICBzZW5kZXJfdXNlcl9uYW1lOiBzdHJpbmc7XG59XG5cbi8qKiBUaGUgbWVzc2FnZSB3YXMgb3JpZ2luYWxseSBzZW50IG9uIGJlaGFsZiBvZiBhIGNoYXQgdG8gYSBncm91cCBjaGF0LiAqL1xuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlT3JpZ2luQ2hhdCB7XG4gIC8qKiBUeXBlIG9mIHRoZSBtZXNzYWdlIG9yaWdpbiwgYWx3YXlzIOKAnGNoYXTigJ0gKi9cbiAgdHlwZTogXCJjaGF0XCI7XG4gIC8qKiBEYXRlIHRoZSBtZXNzYWdlIHdhcyBzZW50IG9yaWdpbmFsbHkgaW4gVW5peCB0aW1lICovXG4gIGRhdGU6IG51bWJlcjtcbiAgLyoqIENoYXQgdGhhdCBzZW50IHRoZSBtZXNzYWdlIG9yaWdpbmFsbHkgKi9cbiAgc2VuZGVyX2NoYXQ6IENoYXQ7XG4gIC8qKiBGb3IgbWVzc2FnZXMgb3JpZ2luYWxseSBzZW50IGJ5IGFuIGFub255bW91cyBjaGF0IGFkbWluaXN0cmF0b3IsIG9yaWdpbmFsIG1lc3NhZ2UgYXV0aG9yIHNpZ25hdHVyZSAqL1xuICBhdXRob3Jfc2lnbmF0dXJlPzogc3RyaW5nO1xufVxuXG4vKiogVGhlIG1lc3NhZ2Ugd2FzIG9yaWdpbmFsbHkgc2VudCB0byBhIGNoYW5uZWwgY2hhdC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZU9yaWdpbkNoYW5uZWwge1xuICAvKiogVHlwZSBvZiB0aGUgbWVzc2FnZSBvcmlnaW4sIGFsd2F5cyDigJxjaGFubmVs4oCdICovXG4gIHR5cGU6IFwiY2hhbm5lbFwiO1xuICAvKiogRGF0ZSB0aGUgbWVzc2FnZSB3YXMgc2VudCBvcmlnaW5hbGx5IGluIFVuaXggdGltZSAqL1xuICBkYXRlOiBudW1iZXI7XG4gIC8qKiBDaGFubmVsIGNoYXQgdG8gd2hpY2ggdGhlIG1lc3NhZ2Ugd2FzIG9yaWdpbmFsbHkgc2VudCAqL1xuICBjaGF0OiBDaGF0LkNoYW5uZWxDaGF0O1xuICAvKiogVW5pcXVlIG1lc3NhZ2UgaWRlbnRpZmllciBpbnNpZGUgdGhlIGNoYXQgKi9cbiAgbWVzc2FnZV9pZDogbnVtYmVyO1xuICAvKiogU2lnbmF0dXJlIG9mIHRoZSBvcmlnaW5hbCBwb3N0IGF1dGhvciAqL1xuICBhdXRob3Jfc2lnbmF0dXJlPzogc3RyaW5nO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBvbmUgc2l6ZSBvZiBhIHBob3RvIG9yIGEgZmlsZSAvIHN0aWNrZXIgdGh1bWJuYWlsLiAqL1xuZXhwb3J0IGludGVyZmFjZSBQaG90b1NpemUge1xuICAvKiogSWRlbnRpZmllciBmb3IgdGhpcyBmaWxlLCB3aGljaCBjYW4gYmUgdXNlZCB0byBkb3dubG9hZCBvciByZXVzZSB0aGUgZmlsZSAqL1xuICBmaWxlX2lkOiBzdHJpbmc7XG4gIC8qKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBmaWxlLCB3aGljaCBpcyBzdXBwb3NlZCB0byBiZSB0aGUgc2FtZSBvdmVyIHRpbWUgYW5kIGZvciBkaWZmZXJlbnQgYm90cy4gQ2FuJ3QgYmUgdXNlZCB0byBkb3dubG9hZCBvciByZXVzZSB0aGUgZmlsZS4gKi9cbiAgZmlsZV91bmlxdWVfaWQ6IHN0cmluZztcbiAgLyoqIFBob3RvIHdpZHRoICovXG4gIHdpZHRoOiBudW1iZXI7XG4gIC8qKiBQaG90byBoZWlnaHQgKi9cbiAgaGVpZ2h0OiBudW1iZXI7XG4gIC8qKiBGaWxlIHNpemUgaW4gYnl0ZXMgKi9cbiAgZmlsZV9zaXplPzogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhbiBhbmltYXRpb24gZmlsZSAoR0lGIG9yIEguMjY0L01QRUctNCBBVkMgdmlkZW8gd2l0aG91dCBzb3VuZCkuICovXG5leHBvcnQgaW50ZXJmYWNlIEFuaW1hdGlvbiB7XG4gIC8qKiBJZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlICovXG4gIGZpbGVfaWQ6IHN0cmluZztcbiAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSBzYW1lIG92ZXIgdGltZSBhbmQgZm9yIGRpZmZlcmVudCBib3RzLiBDYW4ndCBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlLiAqL1xuICBmaWxlX3VuaXF1ZV9pZDogc3RyaW5nO1xuICAvKiogVmlkZW8gd2lkdGggYXMgZGVmaW5lZCBieSBzZW5kZXIgKi9cbiAgd2lkdGg6IG51bWJlcjtcbiAgLyoqIFZpZGVvIGhlaWdodCBhcyBkZWZpbmVkIGJ5IHNlbmRlciAqL1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgLyoqIER1cmF0aW9uIG9mIHRoZSB2aWRlbyBpbiBzZWNvbmRzIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIC8qKiBBbmltYXRpb24gdGh1bWJuYWlsIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIHRodW1ibmFpbD86IFBob3RvU2l6ZTtcbiAgLyoqIE9yaWdpbmFsIGFuaW1hdGlvbiBmaWxlbmFtZSBhcyBkZWZpbmVkIGJ5IHNlbmRlciAqL1xuICBmaWxlX25hbWU/OiBzdHJpbmc7XG4gIC8qKiBNSU1FIHR5cGUgb2YgdGhlIGZpbGUgYXMgZGVmaW5lZCBieSBzZW5kZXIgKi9cbiAgbWltZV90eXBlPzogc3RyaW5nO1xuICAvKiogRmlsZSBzaXplIGluIGJ5dGVzICovXG4gIGZpbGVfc2l6ZT86IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYW4gYXVkaW8gZmlsZSB0byBiZSB0cmVhdGVkIGFzIG11c2ljIGJ5IHRoZSBUZWxlZ3JhbSBjbGllbnRzLiAqL1xuZXhwb3J0IGludGVyZmFjZSBBdWRpbyB7XG4gIC8qKiBJZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlICovXG4gIGZpbGVfaWQ6IHN0cmluZztcbiAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSBzYW1lIG92ZXIgdGltZSBhbmQgZm9yIGRpZmZlcmVudCBib3RzLiBDYW4ndCBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlLiAqL1xuICBmaWxlX3VuaXF1ZV9pZDogc3RyaW5nO1xuICAvKiogRHVyYXRpb24gb2YgdGhlIGF1ZGlvIGluIHNlY29uZHMgYXMgZGVmaW5lZCBieSBzZW5kZXIgKi9cbiAgZHVyYXRpb246IG51bWJlcjtcbiAgLyoqIFBlcmZvcm1lciBvZiB0aGUgYXVkaW8gYXMgZGVmaW5lZCBieSBzZW5kZXIgb3IgYnkgYXVkaW8gdGFncyAqL1xuICBwZXJmb3JtZXI/OiBzdHJpbmc7XG4gIC8qKiBUaXRsZSBvZiB0aGUgYXVkaW8gYXMgZGVmaW5lZCBieSBzZW5kZXIgb3IgYnkgYXVkaW8gdGFncyAqL1xuICB0aXRsZT86IHN0cmluZztcbiAgLyoqIE9yaWdpbmFsIGZpbGVuYW1lIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIGZpbGVfbmFtZT86IHN0cmluZztcbiAgLyoqIE1JTUUgdHlwZSBvZiB0aGUgZmlsZSBhcyBkZWZpbmVkIGJ5IHNlbmRlciAqL1xuICBtaW1lX3R5cGU/OiBzdHJpbmc7XG4gIC8qKiBGaWxlIHNpemUgaW4gYnl0ZXMgKi9cbiAgZmlsZV9zaXplPzogbnVtYmVyO1xuICAvKiogVGh1bWJuYWlsIG9mIHRoZSBhbGJ1bSBjb3ZlciB0byB3aGljaCB0aGUgbXVzaWMgZmlsZSBiZWxvbmdzICovXG4gIHRodW1ibmFpbD86IFBob3RvU2l6ZTtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBnZW5lcmFsIGZpbGUgKGFzIG9wcG9zZWQgdG8gcGhvdG9zLCB2b2ljZSBtZXNzYWdlcyBhbmQgYXVkaW8gZmlsZXMpLiAqL1xuZXhwb3J0IGludGVyZmFjZSBEb2N1bWVudCB7XG4gIC8qKiBJZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlICovXG4gIGZpbGVfaWQ6IHN0cmluZztcbiAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSBzYW1lIG92ZXIgdGltZSBhbmQgZm9yIGRpZmZlcmVudCBib3RzLiBDYW4ndCBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlLiAqL1xuICBmaWxlX3VuaXF1ZV9pZDogc3RyaW5nO1xuICAvKiogRG9jdW1lbnQgdGh1bWJuYWlsIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIHRodW1ibmFpbD86IFBob3RvU2l6ZTtcbiAgLyoqIE9yaWdpbmFsIGZpbGVuYW1lIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIGZpbGVfbmFtZT86IHN0cmluZztcbiAgLyoqIE1JTUUgdHlwZSBvZiB0aGUgZmlsZSBhcyBkZWZpbmVkIGJ5IHNlbmRlciAqL1xuICBtaW1lX3R5cGU/OiBzdHJpbmc7XG4gIC8qKiBGaWxlIHNpemUgaW4gYnl0ZXMgKi9cbiAgZmlsZV9zaXplPzogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIHN0b3J5LiAqL1xuZXhwb3J0IGludGVyZmFjZSBTdG9yeSB7XG4gIC8qKiBDaGF0IHRoYXQgcG9zdGVkIHRoZSBzdG9yeSAqL1xuICBjaGF0OiBDaGF0O1xuICAvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBzdG9yeSBpbiB0aGUgY2hhdCAqL1xuICBpZDogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIHZpZGVvIGZpbGUuICovXG5leHBvcnQgaW50ZXJmYWNlIFZpZGVvIHtcbiAgLyoqIElkZW50aWZpZXIgZm9yIHRoaXMgZmlsZSwgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZG93bmxvYWQgb3IgcmV1c2UgdGhlIGZpbGUgKi9cbiAgZmlsZV9pZDogc3RyaW5nO1xuICAvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgZmlsZSwgd2hpY2ggaXMgc3VwcG9zZWQgdG8gYmUgdGhlIHNhbWUgb3ZlciB0aW1lIGFuZCBmb3IgZGlmZmVyZW50IGJvdHMuIENhbid0IGJlIHVzZWQgdG8gZG93bmxvYWQgb3IgcmV1c2UgdGhlIGZpbGUuICovXG4gIGZpbGVfdW5pcXVlX2lkOiBzdHJpbmc7XG4gIC8qKiBWaWRlbyB3aWR0aCBhcyBkZWZpbmVkIGJ5IHNlbmRlciAqL1xuICB3aWR0aDogbnVtYmVyO1xuICAvKiogVmlkZW8gaGVpZ2h0IGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIGhlaWdodDogbnVtYmVyO1xuICAvKiogRHVyYXRpb24gb2YgdGhlIHZpZGVvIGluIHNlY29uZHMgYXMgZGVmaW5lZCBieSBzZW5kZXIgKi9cbiAgZHVyYXRpb246IG51bWJlcjtcbiAgLyoqIFZpZGVvIHRodW1ibmFpbCAqL1xuICB0aHVtYm5haWw/OiBQaG90b1NpemU7XG4gIC8qKiBPcmlnaW5hbCBmaWxlbmFtZSBhcyBkZWZpbmVkIGJ5IHNlbmRlciAqL1xuICBmaWxlX25hbWU/OiBzdHJpbmc7XG4gIC8qKiBNSU1FIHR5cGUgb2YgdGhlIGZpbGUgYXMgZGVmaW5lZCBieSBzZW5kZXIgKi9cbiAgbWltZV90eXBlPzogc3RyaW5nO1xuICAvKiogRmlsZSBzaXplIGluIGJ5dGVzICovXG4gIGZpbGVfc2l6ZT86IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSB2aWRlbyBtZXNzYWdlIChhdmFpbGFibGUgaW4gVGVsZWdyYW0gYXBwcyBhcyBvZiB2LjQuMCkuICovXG5leHBvcnQgaW50ZXJmYWNlIFZpZGVvTm90ZSB7XG4gIC8qKiBJZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlICovXG4gIGZpbGVfaWQ6IHN0cmluZztcbiAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIGZpbGUsIHdoaWNoIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSBzYW1lIG92ZXIgdGltZSBhbmQgZm9yIGRpZmZlcmVudCBib3RzLiBDYW4ndCBiZSB1c2VkIHRvIGRvd25sb2FkIG9yIHJldXNlIHRoZSBmaWxlLiAqL1xuICBmaWxlX3VuaXF1ZV9pZDogc3RyaW5nO1xuICAvKiogVmlkZW8gd2lkdGggYW5kIGhlaWdodCAoZGlhbWV0ZXIgb2YgdGhlIHZpZGVvIG1lc3NhZ2UpIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIGxlbmd0aDogbnVtYmVyO1xuICAvKiogRHVyYXRpb24gb2YgdGhlIHZpZGVvIGluIHNlY29uZHMgYXMgZGVmaW5lZCBieSBzZW5kZXIgKi9cbiAgZHVyYXRpb246IG51bWJlcjtcbiAgLyoqIFZpZGVvIHRodW1ibmFpbCAqL1xuICB0aHVtYm5haWw/OiBQaG90b1NpemU7XG4gIC8qKiBGaWxlIHNpemUgaW4gYnl0ZXMgKi9cbiAgZmlsZV9zaXplPzogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIHZvaWNlIG5vdGUuICovXG5leHBvcnQgaW50ZXJmYWNlIFZvaWNlIHtcbiAgLyoqIElkZW50aWZpZXIgZm9yIHRoaXMgZmlsZSwgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZG93bmxvYWQgb3IgcmV1c2UgdGhlIGZpbGUgKi9cbiAgZmlsZV9pZDogc3RyaW5nO1xuICAvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgZmlsZSwgd2hpY2ggaXMgc3VwcG9zZWQgdG8gYmUgdGhlIHNhbWUgb3ZlciB0aW1lIGFuZCBmb3IgZGlmZmVyZW50IGJvdHMuIENhbid0IGJlIHVzZWQgdG8gZG93bmxvYWQgb3IgcmV1c2UgdGhlIGZpbGUuICovXG4gIGZpbGVfdW5pcXVlX2lkOiBzdHJpbmc7XG4gIC8qKiBEdXJhdGlvbiBvZiB0aGUgYXVkaW8gaW4gc2Vjb25kcyBhcyBkZWZpbmVkIGJ5IHNlbmRlciAqL1xuICBkdXJhdGlvbjogbnVtYmVyO1xuICAvKiogTUlNRSB0eXBlIG9mIHRoZSBmaWxlIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIG1pbWVfdHlwZT86IHN0cmluZztcbiAgLyoqIEZpbGUgc2l6ZSBpbiBieXRlcyAqL1xuICBmaWxlX3NpemU/OiBudW1iZXI7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgcGhvbmUgY29udGFjdC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ29udGFjdCB7XG4gIC8qKiBDb250YWN0J3MgcGhvbmUgbnVtYmVyICovXG4gIHBob25lX251bWJlcjogc3RyaW5nO1xuICAvKiogQ29udGFjdCdzIGZpcnN0IG5hbWUgKi9cbiAgZmlyc3RfbmFtZTogc3RyaW5nO1xuICAvKiogQ29udGFjdCdzIGxhc3QgbmFtZSAqL1xuICBsYXN0X25hbWU/OiBzdHJpbmc7XG4gIC8qKiBDb250YWN0J3MgdXNlciBpZGVudGlmaWVyIGluIFRlbGVncmFtLiAqL1xuICB1c2VyX2lkPzogbnVtYmVyO1xuICAvKiogQWRkaXRpb25hbCBkYXRhIGFib3V0IHRoZSBjb250YWN0IGluIHRoZSBmb3JtIG9mIGEgdkNhcmQgKi9cbiAgdmNhcmQ/OiBzdHJpbmc7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGFuIGFuaW1hdGVkIGVtb2ppIHRoYXQgZGlzcGxheXMgYSByYW5kb20gdmFsdWUuICovXG5leHBvcnQgaW50ZXJmYWNlIERpY2Uge1xuICAvKiogRW1vamkgb24gd2hpY2ggdGhlIGRpY2UgdGhyb3cgYW5pbWF0aW9uIGlzIGJhc2VkICovXG4gIGVtb2ppOiBzdHJpbmc7XG4gIC8qKiBWYWx1ZSBvZiB0aGUgZGljZSwgMS02IGZvciBcIvCfjrJcIiwgXCLwn46vXCIgYW5kIFwi8J+Os1wiIGJhc2UgZW1vamksIDEtNSBmb3IgXCLwn4+AXCIgYW5kIFwi4pq9XCIgYmFzZSBlbW9qaSwgMS02NCBmb3IgXCLwn46wXCIgYmFzZSBlbW9qaSAqL1xuICB2YWx1ZTogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgb25lIGFuc3dlciBvcHRpb24gaW4gYSBwb2xsLiAqL1xuZXhwb3J0IGludGVyZmFjZSBQb2xsT3B0aW9uIHtcbiAgLyoqIE9wdGlvbiB0ZXh0LCAxLTEwMCBjaGFyYWN0ZXJzICovXG4gIHRleHQ6IHN0cmluZztcbiAgLyoqIFNwZWNpYWwgZW50aXRpZXMgdGhhdCBhcHBlYXIgaW4gdGhlIG9wdGlvbiB0ZXh0LiBDdXJyZW50bHksIG9ubHkgY3VzdG9tIGVtb2ppIGVudGl0aWVzIGFyZSBhbGxvd2VkIGluIHBvbGwgb3B0aW9uIHRleHRzICovXG4gIHRleHRfZW50aXRpZXM/OiBNZXNzYWdlRW50aXR5W107XG4gIC8qKiBOdW1iZXIgb2YgdXNlcnMgdGhhdCB2b3RlZCBmb3IgdGhpcyBvcHRpb24gKi9cbiAgdm90ZXJfY291bnQ6IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IGNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IG9uZSBhbnN3ZXIgb3B0aW9uIGluIGEgcG9sbCB0byBzZW5kLiAqL1xuZXhwb3J0IGludGVyZmFjZSBJbnB1dFBvbGxPcHRpb24ge1xuICAvKiogT3B0aW9uIHRleHQsIDEtMTAwIGNoYXJhY3RlcnMgKi9cbiAgdGV4dDogc3RyaW5nO1xuICAvKiogTW9kZSBmb3IgcGFyc2luZyBlbnRpdGllcyBpbiB0aGUgdGV4dC4gU2VlIGZvcm1hdHRpbmcgb3B0aW9ucyBmb3IgbW9yZSBkZXRhaWxzLiBDdXJyZW50bHksIG9ubHkgY3VzdG9tIGVtb2ppIGVudGl0aWVzIGFyZSBhbGxvd2VkICovXG4gIHRleHRfcGFyc2VfbW9kZT86IHN0cmluZztcbiAgLyoqIEEgbGlzdCBvZiBzcGVjaWFsIGVudGl0aWVzIHRoYXQgYXBwZWFyIGluIHRoZSBwb2xsIG9wdGlvbiB0ZXh0LiBJdCBjYW4gYmUgc3BlY2lmaWVkIGluc3RlYWQgb2YgdGV4dF9wYXJzZV9tb2RlICovXG4gIHRleHRfZW50aXRpZXM/OiBNZXNzYWdlRW50aXR5W107XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGFuIGFuc3dlciBvZiBhIHVzZXIgaW4gYSBub24tYW5vbnltb3VzIHBvbGwuICovXG5leHBvcnQgaW50ZXJmYWNlIFBvbGxBbnN3ZXIge1xuICAvKiogVW5pcXVlIHBvbGwgaWRlbnRpZmllciAqL1xuICBwb2xsX2lkOiBzdHJpbmc7XG4gIC8qKiBUaGUgY2hhdCB0aGF0IGNoYW5nZWQgdGhlIGFuc3dlciB0byB0aGUgcG9sbCwgaWYgdGhlIHZvdGVyIGlzIGFub255bW91cyAqL1xuICB2b3Rlcl9jaGF0PzogQ2hhdDtcbiAgLyoqIFRoZSB1c2VyIHRoYXQgY2hhbmdlZCB0aGUgYW5zd2VyIHRvIHRoZSBwb2xsLCBpZiB0aGUgdm90ZXIgaXNuJ3QgYW5vbnltb3VzICovXG4gIHVzZXI/OiBVc2VyO1xuICAvKiogMC1iYXNlZCBpZGVudGlmaWVycyBvZiBjaG9zZW4gYW5zd2VyIG9wdGlvbnMuIE1heSBiZSBlbXB0eSBpZiB0aGUgdm90ZSB3YXMgcmV0cmFjdGVkLiAqL1xuICBvcHRpb25faWRzOiBudW1iZXJbXTtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IGNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IGEgcG9sbC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUG9sbCB7XG4gIC8qKiBVbmlxdWUgcG9sbCBpZGVudGlmaWVyICovXG4gIGlkOiBzdHJpbmc7XG4gIC8qKiBQb2xsIHF1ZXN0aW9uLCAxLTMwMCBjaGFyYWN0ZXJzICovXG4gIHF1ZXN0aW9uOiBzdHJpbmc7XG4gIC8qKiBTcGVjaWFsIGVudGl0aWVzIHRoYXQgYXBwZWFyIGluIHRoZSBxdWVzdGlvbi4gQ3VycmVudGx5LCBvbmx5IGN1c3RvbSBlbW9qaSBlbnRpdGllcyBhcmUgYWxsb3dlZCBpbiBwb2xsIHF1ZXN0aW9ucyAqL1xuICBxdWVzdGlvbl9lbnRpdGllcz86IE1lc3NhZ2VFbnRpdHlbXTtcbiAgLyoqIExpc3Qgb2YgcG9sbCBvcHRpb25zICovXG4gIG9wdGlvbnM6IFBvbGxPcHRpb25bXTtcbiAgLyoqIFRvdGFsIG51bWJlciBvZiB1c2VycyB0aGF0IHZvdGVkIGluIHRoZSBwb2xsICovXG4gIHRvdGFsX3ZvdGVyX2NvdW50OiBudW1iZXI7XG4gIC8qKiBUcnVlLCBpZiB0aGUgcG9sbCBpcyBjbG9zZWQgKi9cbiAgaXNfY2xvc2VkOiBib29sZWFuO1xuICAvKiogVHJ1ZSwgaWYgdGhlIHBvbGwgaXMgYW5vbnltb3VzICovXG4gIGlzX2Fub255bW91czogYm9vbGVhbjtcbiAgLyoqIFBvbGwgdHlwZSwgY3VycmVudGx5IGNhbiBiZSDigJxyZWd1bGFy4oCdIG9yIOKAnHF1aXrigJ0gKi9cbiAgdHlwZTogXCJyZWd1bGFyXCIgfCBcInF1aXpcIjtcbiAgLyoqIFRydWUsIGlmIHRoZSBwb2xsIGFsbG93cyBtdWx0aXBsZSBhbnN3ZXJzICovXG4gIGFsbG93c19tdWx0aXBsZV9hbnN3ZXJzOiBib29sZWFuO1xuICAvKiogMC1iYXNlZCBpZGVudGlmaWVyIG9mIHRoZSBjb3JyZWN0IGFuc3dlciBvcHRpb24uIEF2YWlsYWJsZSBvbmx5IGZvciBwb2xscyBpbiB0aGUgcXVpeiBtb2RlLCB3aGljaCBhcmUgY2xvc2VkLCBvciB3YXMgc2VudCAobm90IGZvcndhcmRlZCkgYnkgdGhlIGJvdCBvciB0byB0aGUgcHJpdmF0ZSBjaGF0IHdpdGggdGhlIGJvdC4gKi9cbiAgY29ycmVjdF9vcHRpb25faWQ/OiBudW1iZXI7XG4gIC8qKiBUZXh0IHRoYXQgaXMgc2hvd24gd2hlbiBhIHVzZXIgY2hvb3NlcyBhbiBpbmNvcnJlY3QgYW5zd2VyIG9yIHRhcHMgb24gdGhlIGxhbXAgaWNvbiBpbiBhIHF1aXotc3R5bGUgcG9sbCwgMC0yMDAgY2hhcmFjdGVycyAqL1xuICBleHBsYW5hdGlvbj86IHN0cmluZztcbiAgLyoqIFNwZWNpYWwgZW50aXRpZXMgbGlrZSB1c2VybmFtZXMsIFVSTHMsIGJvdCBjb21tYW5kcywgZXRjLiB0aGF0IGFwcGVhciBpbiB0aGUgZXhwbGFuYXRpb24gKi9cbiAgZXhwbGFuYXRpb25fZW50aXRpZXM/OiBNZXNzYWdlRW50aXR5W107XG4gIC8qKiBBbW91bnQgb2YgdGltZSBpbiBzZWNvbmRzIHRoZSBwb2xsIHdpbGwgYmUgYWN0aXZlIGFmdGVyIGNyZWF0aW9uICovXG4gIG9wZW5fcGVyaW9kPzogbnVtYmVyO1xuICAvKiogUG9pbnQgaW4gdGltZSAoVW5peCB0aW1lc3RhbXApIHdoZW4gdGhlIHBvbGwgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGNsb3NlZCAqL1xuICBjbG9zZV9kYXRlPzogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIHBvaW50IG9uIHRoZSBtYXAuICovXG5leHBvcnQgaW50ZXJmYWNlIExvY2F0aW9uIHtcbiAgLyoqIExhdGl0dWRlIGFzIGRlZmluZWQgYnkgc2VuZGVyICovXG4gIGxhdGl0dWRlOiBudW1iZXI7XG4gIC8qKiBMb25naXR1ZGUgYXMgZGVmaW5lZCBieSBzZW5kZXIgKi9cbiAgbG9uZ2l0dWRlOiBudW1iZXI7XG4gIC8qKiBUaGUgcmFkaXVzIG9mIHVuY2VydGFpbnR5IGZvciB0aGUgbG9jYXRpb24sIG1lYXN1cmVkIGluIG1ldGVyczsgMC0xNTAwICovXG4gIGhvcml6b250YWxfYWNjdXJhY3k/OiBudW1iZXI7XG4gIC8qKiBUaW1lIHJlbGF0aXZlIHRvIHRoZSBtZXNzYWdlIHNlbmRpbmcgZGF0ZSwgZHVyaW5nIHdoaWNoIHRoZSBsb2NhdGlvbiBjYW4gYmUgdXBkYXRlZDsgaW4gc2Vjb25kcy4gRm9yIGFjdGl2ZSBsaXZlIGxvY2F0aW9ucyBvbmx5LiAqL1xuICBsaXZlX3BlcmlvZD86IG51bWJlcjtcbiAgLyoqIFRoZSBkaXJlY3Rpb24gaW4gd2hpY2ggdXNlciBpcyBtb3ZpbmcsIGluIGRlZ3JlZXM7IDEtMzYwLiBGb3IgYWN0aXZlIGxpdmUgbG9jYXRpb25zIG9ubHkuICovXG4gIGhlYWRpbmc/OiBudW1iZXI7XG4gIC8qKiBUaGUgbWF4aW11bSBkaXN0YW5jZSBmb3IgcHJveGltaXR5IGFsZXJ0cyBhYm91dCBhcHByb2FjaGluZyBhbm90aGVyIGNoYXQgbWVtYmVyLCBpbiBtZXRlcnMuIEZvciBzZW50IGxpdmUgbG9jYXRpb25zIG9ubHkuICovXG4gIHByb3hpbWl0eV9hbGVydF9yYWRpdXM/OiBudW1iZXI7XG59XG5cbi8qKiBEZXNjcmliZXMgdGhlIHBhaWQgbWVkaWEgYWRkZWQgdG8gYSBtZXNzYWdlLiAqL1xuZXhwb3J0IGludGVyZmFjZSBQYWlkTWVkaWFJbmZvIHtcbiAgLyoqIFRoZSBudW1iZXIgb2YgVGVsZWdyYW0gU3RhcnMgdGhhdCBtdXN0IGJlIHBhaWQgdG8gYnV5IGFjY2VzcyB0byB0aGUgbWVkaWEgKi9cbiAgc3Rhcl9jb3VudDogbnVtYmVyO1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgdGhlIHBhaWQgbWVkaWEgKi9cbiAgcGFpZF9tZWRpYTogUGFpZE1lZGlhW107XG59XG5cbi8qKiBUaGlzIG9iamVjdCBkZXNjcmliZXMgcGFpZCBtZWRpYS4gQ3VycmVudGx5LCBpdCBjYW4gYmUgb25lIG9mXG5cbi0gUGFpZE1lZGlhUHJldmlld1xuLSBQYWlkTWVkaWFQaG90b1xuLSBQYWlkTWVkaWFWaWRlbyAqL1xuZXhwb3J0IHR5cGUgUGFpZE1lZGlhID1cbiAgfCBQYWlkTWVkaWFQcmV2aWV3XG4gIHwgUGFpZE1lZGlhUGhvdG9cbiAgfCBQYWlkTWVkaWFWaWRlbztcblxuLyoqIFRoZSBwYWlkIG1lZGlhIGlzbid0IGF2YWlsYWJsZSBiZWZvcmUgdGhlIHBheW1lbnQuICovXG5leHBvcnQgaW50ZXJmYWNlIFBhaWRNZWRpYVByZXZpZXcge1xuICAvKiogVHlwZSBvZiB0aGUgcGFpZCBtZWRpYSwgYWx3YXlzIOKAnHByZXZpZXfigJ0gKi9cbiAgdHlwZTogXCJwcmV2aWV3XCI7XG4gIC8qKiBNZWRpYSB3aWR0aCBhcyBkZWZpbmVkIGJ5IHRoZSBzZW5kZXIgKi9cbiAgd2lkdGg/OiBudW1iZXI7XG4gIC8qKiBNZWRpYSBoZWlnaHQgYXMgZGVmaW5lZCBieSB0aGUgc2VuZGVyICovXG4gIGhlaWdodD86IG51bWJlcjtcbiAgLyoqIER1cmF0aW9uIG9mIHRoZSBtZWRpYSBpbiBzZWNvbmRzIGFzIGRlZmluZWQgYnkgdGhlIHNlbmRlciAqL1xuICBkdXJhdGlvbj86IG51bWJlcjtcbn1cblxuLyoqIFRoZSBwYWlkIG1lZGlhIGlzIGEgcGhvdG8uICovXG5leHBvcnQgaW50ZXJmYWNlIFBhaWRNZWRpYVBob3RvIHtcbiAgLyoqIFR5cGUgb2YgdGhlIHBhaWQgbWVkaWEsIGFsd2F5cyDigJxwaG90b+KAnSAqL1xuICB0eXBlOiBcInBob3RvXCI7XG4gIC8qKiBUaGUgcGhvdG8gKi9cbiAgcGhvdG86IFBob3RvU2l6ZVtdO1xufVxuXG4vKiogVGhlIHBhaWQgbWVkaWEgaXMgYSB2aWRlby4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUGFpZE1lZGlhVmlkZW8ge1xuICAvKiogVHlwZSBvZiB0aGUgcGFpZCBtZWRpYSwgYWx3YXlzIOKAnHZpZGVv4oCdICovXG4gIHR5cGU6IFwidmlkZW9cIjtcbiAgLyoqIFRoZSB2aWRlbyAqL1xuICB2aWRlbzogVmlkZW87XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgdmVudWUuICovXG5leHBvcnQgaW50ZXJmYWNlIFZlbnVlIHtcbiAgLyoqIFZlbnVlIGxvY2F0aW9uLiBDYW4ndCBiZSBhIGxpdmUgbG9jYXRpb24gKi9cbiAgbG9jYXRpb246IExvY2F0aW9uO1xuICAvKiogTmFtZSBvZiB0aGUgdmVudWUgKi9cbiAgdGl0bGU6IHN0cmluZztcbiAgLyoqIEFkZHJlc3Mgb2YgdGhlIHZlbnVlICovXG4gIGFkZHJlc3M6IHN0cmluZztcbiAgLyoqIEZvdXJzcXVhcmUgaWRlbnRpZmllciBvZiB0aGUgdmVudWUgKi9cbiAgZm91cnNxdWFyZV9pZD86IHN0cmluZztcbiAgLyoqIEZvdXJzcXVhcmUgdHlwZSBvZiB0aGUgdmVudWUuIChGb3IgZXhhbXBsZSwg4oCcYXJ0c19lbnRlcnRhaW5tZW50L2RlZmF1bHTigJ0sIOKAnGFydHNfZW50ZXJ0YWlubWVudC9hcXVhcml1beKAnSBvciDigJxmb29kL2ljZWNyZWFt4oCdLikgKi9cbiAgZm91cnNxdWFyZV90eXBlPzogc3RyaW5nO1xuICAvKiogR29vZ2xlIFBsYWNlcyBpZGVudGlmaWVyIG9mIHRoZSB2ZW51ZSAqL1xuICBnb29nbGVfcGxhY2VfaWQ/OiBzdHJpbmc7XG4gIC8qKiBHb29nbGUgUGxhY2VzIHR5cGUgb2YgdGhlIHZlbnVlLiAoU2VlIHN1cHBvcnRlZCB0eXBlcy4pICovXG4gIGdvb2dsZV9wbGFjZV90eXBlPzogc3RyaW5nO1xufVxuXG4vKiogRGVzY3JpYmVzIGRhdGEgc2VudCBmcm9tIGEgV2ViIEFwcCB0byB0aGUgYm90LiAqL1xuZXhwb3J0IGludGVyZmFjZSBXZWJBcHBEYXRhIHtcbiAgLyoqIFRoZSBkYXRhLiBCZSBhd2FyZSB0aGF0IGEgYmFkIGNsaWVudCBjYW4gc2VuZCBhcmJpdHJhcnkgZGF0YSBpbiB0aGlzIGZpZWxkLiAqL1xuICBkYXRhOiBzdHJpbmc7XG4gIC8qKiBUZXh0IG9mIHRoZSB3ZWJfYXBwIGtleWJvYXJkIGJ1dHRvbiBmcm9tIHdoaWNoIHRoZSBXZWIgQXBwIHdhcyBvcGVuZWQuIEJlIGF3YXJlIHRoYXQgYSBiYWQgY2xpZW50IGNhbiBzZW5kIGFyYml0cmFyeSBkYXRhIGluIHRoaXMgZmllbGQuICovXG4gIGJ1dHRvbl90ZXh0OiBzdHJpbmc7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIHRoZSBjb250ZW50IG9mIGEgc2VydmljZSBtZXNzYWdlLCBzZW50IHdoZW5ldmVyIGEgdXNlciBpbiB0aGUgY2hhdCB0cmlnZ2VycyBhIHByb3hpbWl0eSBhbGVydCBzZXQgYnkgYW5vdGhlciB1c2VyLiAqL1xuZXhwb3J0IGludGVyZmFjZSBQcm94aW1pdHlBbGVydFRyaWdnZXJlZCB7XG4gIC8qKiBVc2VyIHRoYXQgdHJpZ2dlcmVkIHRoZSBhbGVydCAqL1xuICB0cmF2ZWxlcjogVXNlcjtcbiAgLyoqIFVzZXIgdGhhdCBzZXQgdGhlIGFsZXJ0ICovXG4gIHdhdGNoZXI6IFVzZXI7XG4gIC8qKiBUaGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgdXNlcnMgKi9cbiAgZGlzdGFuY2U6IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgYSBjaGFuZ2UgaW4gYXV0by1kZWxldGUgdGltZXIgc2V0dGluZ3MuICovXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VBdXRvRGVsZXRlVGltZXJDaGFuZ2VkIHtcbiAgLyoqIE5ldyBhdXRvLWRlbGV0ZSB0aW1lIGZvciBtZXNzYWdlcyBpbiB0aGUgY2hhdDsgaW4gc2Vjb25kcyAqL1xuICBtZXNzYWdlX2F1dG9fZGVsZXRlX3RpbWU6IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgYSB1c2VyIGJvb3N0aW5nIGEgY2hhdC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ2hhdEJvb3N0QWRkZWQge1xuICAvKiogTnVtYmVyIG9mIGJvb3N0cyBhZGRlZCBieSB0aGUgdXNlciAqL1xuICBib29zdF9jb3VudDogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgZGVzY3JpYmVzIHRoZSB3YXkgYSBiYWNrZ3JvdW5kIGlzIGZpbGxlZCBiYXNlZCBvbiB0aGUgc2VsZWN0ZWQgY29sb3JzLiBDdXJyZW50bHksIGl0IGNhbiBiZSBvbmUgb2ZcblxuLSBCYWNrZ3JvdW5kRmlsbFNvbGlkXG4tIEJhY2tncm91bmRGaWxsR3JhZGllbnRcbi0gQmFja2dyb3VuZEZpbGxGcmVlZm9ybUdyYWRpZW50ICovXG5leHBvcnQgdHlwZSBCYWNrZ3JvdW5kRmlsbCA9XG4gIHwgQmFja2dyb3VuZEZpbGxTb2xpZFxuICB8IEJhY2tncm91bmRGaWxsR3JhZGllbnRcbiAgfCBCYWNrZ3JvdW5kRmlsbEZyZWVmb3JtR3JhZGllbnQ7XG5cbi8qKiBUaGUgYmFja2dyb3VuZCBpcyBmaWxsZWQgdXNpbmcgdGhlIHNlbGVjdGVkIGNvbG9yLiAqL1xuZXhwb3J0IGludGVyZmFjZSBCYWNrZ3JvdW5kRmlsbFNvbGlkIHtcbiAgLyoqIFR5cGUgb2YgdGhlIGJhY2tncm91bmQgZmlsbCwgYWx3YXlzIOKAnHNvbGlk4oCdICovXG4gIHR5cGU6IFwic29saWRcIjtcbiAgLyoqIFRoZSBjb2xvciBvZiB0aGUgYmFja2dyb3VuZCBmaWxsIGluIHRoZSBSR0IyNCBmb3JtYXQgKi9cbiAgY29sb3I6IG51bWJlcjtcbn1cblxuLyoqIFRoZSBiYWNrZ3JvdW5kIGlzIGEgZ3JhZGllbnQgZmlsbC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQmFja2dyb3VuZEZpbGxHcmFkaWVudCB7XG4gIC8qKiBUeXBlIG9mIHRoZSBiYWNrZ3JvdW5kIGZpbGwsIGFsd2F5cyDigJxncmFkaWVudOKAnSAqL1xuICB0eXBlOiBcImdyYWRpZW50XCI7XG4gIC8qKiBUb3AgY29sb3Igb2YgdGhlIGdyYWRpZW50IGluIHRoZSBSR0IyNCBmb3JtYXQgKi9cbiAgdG9wX2NvbG9yOiBudW1iZXI7XG4gIC8qKiBCb3R0b20gY29sb3Igb2YgdGhlIGdyYWRpZW50IGluIHRoZSBSR0IyNCBmb3JtYXQgKi9cbiAgYm90dG9tX2NvbG9yOiBudW1iZXI7XG4gIC8qKiBDbG9ja3dpc2Ugcm90YXRpb24gYW5nbGUgb2YgdGhlIGJhY2tncm91bmQgZmlsbCBpbiBkZWdyZWVzOyAwLTM1OSAqL1xuICByb3RhdGlvbl9hbmdsZTogbnVtYmVyO1xufVxuXG4vKiogVGhlIGJhY2tncm91bmQgaXMgYSBmcmVlZm9ybSBncmFkaWVudCB0aGF0IHJvdGF0ZXMgIGFmdGVyIGV2ZXJ5IG1lc3NhZ2UgaW4gdGhlIGNoYXQuICovXG5leHBvcnQgaW50ZXJmYWNlIEJhY2tncm91bmRGaWxsRnJlZWZvcm1HcmFkaWVudCB7XG4gIC8qKiBUeXBlIG9mIHRoZSBiYWNrZ3JvdW5kIGZpbGwsIGFsd2F5cyDigJxmcmVlZm9ybV9ncmFkaWVudOKAnSAqL1xuICB0eXBlOiBcImZyZWVmb3JtX2dyYWRpZW50XCI7XG4gIC8qKiBBIGxpc3Qgb2YgdGhlIDMgb3IgNCBiYXNlIGNvbG9ycyB0aGF0IGFyZSB1c2VkIHRvIGdlbmVyYXRlIHRoZSBmcmVlZm9ybSBncmFkaWVudCBpbiB0aGUgUkdCMjQgZm9ybWF0ICovXG4gIGNvbG9yczogbnVtYmVyW107XG59XG5cbi8qKiBUaGlzIG9iamVjdCBkZXNjcmliZXMgdGhlIHR5cGUgb2YgYSBiYWNrZ3JvdW5kLiBDdXJyZW50bHksIGl0IGNhbiBiZSBvbmUgb2ZcblxuLSBCYWNrZ3JvdW5kVHlwZUZpbGxcbi0gQmFja2dyb3VuZFR5cGVXYWxscGFwZXJcbi0gQmFja2dyb3VuZFR5cGVQYXR0ZXJuXG4tIEJhY2tncm91bmRUeXBlQ2hhdFRoZW1lXG4tIEJhY2tncm91bmRUeXBlRmlsbCAqL1xuZXhwb3J0IHR5cGUgQmFja2dyb3VuZFR5cGUgPVxuICB8IEJhY2tncm91bmRUeXBlRmlsbFxuICB8IEJhY2tncm91bmRUeXBlV2FsbHBhcGVyXG4gIHwgQmFja2dyb3VuZFR5cGVQYXR0ZXJuXG4gIHwgQmFja2dyb3VuZFR5cGVDaGF0VGhlbWU7XG5cbi8qKiBUaGUgYmFja2dyb3VuZCBpcyBhdXRvbWF0aWNhbGx5IGZpbGxlZCBiYXNlZCBvbiB0aGUgc2VsZWN0ZWQgY29sb3JzLiAqL1xuZXhwb3J0IGludGVyZmFjZSBCYWNrZ3JvdW5kVHlwZUZpbGwge1xuICAvKiogVHlwZSBvZiB0aGUgYmFja2dyb3VuZCwgYWx3YXlzIOKAnGZpbGzigJ0gKi9cbiAgdHlwZTogXCJmaWxsXCI7XG4gIC8qKiBUaGUgYmFja2dyb3VuZCBmaWxsICovXG4gIGZpbGw6IEJhY2tncm91bmRGaWxsO1xuICAvKiogRGltbWluZyBvZiB0aGUgYmFja2dyb3VuZCBpbiBkYXJrIHRoZW1lcywgYXMgYSBwZXJjZW50YWdlOyAwLTEwMCAqL1xuICBkYXJrX3RoZW1lX2RpbW1pbmc6IG51bWJlcjtcbn1cblxuLyoqIFRoZSBiYWNrZ3JvdW5kIGlzIGEgd2FsbHBhcGVyIGluIHRoZSBKUEVHIGZvcm1hdC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQmFja2dyb3VuZFR5cGVXYWxscGFwZXIge1xuICAvKiogVHlwZSBvZiB0aGUgYmFja2dyb3VuZCwgYWx3YXlzIOKAnHdhbGxwYXBlcuKAnSAqL1xuICB0eXBlOiBcIndhbGxwYXBlclwiO1xuICAvKiogRG9jdW1lbnQgd2l0aCB0aGUgd2FsbHBhcGVyICovXG4gIGRvY3VtZW50OiBEb2N1bWVudDtcbiAgLyoqIERpbW1pbmcgb2YgdGhlIGJhY2tncm91bmQgaW4gZGFyayB0aGVtZXMsIGFzIGEgcGVyY2VudGFnZTsgMC0xMDAgKi9cbiAgZGFya190aGVtZV9kaW1taW5nOiBudW1iZXI7XG4gIC8qKiBUcnVlLCBpZiB0aGUgd2FsbHBhcGVyIGlzIGRvd25zY2FsZWQgdG8gZml0IGluIGEgNDUweDQ1MCBzcXVhcmUgYW5kIHRoZW4gYm94LWJsdXJyZWQgd2l0aCByYWRpdXMgMTIgKi9cbiAgaXNfYmx1cnJlZD86IHRydWU7XG4gIC8qKiBUcnVlLCBpZiB0aGUgYmFja2dyb3VuZCBtb3ZlcyBzbGlnaHRseSB3aGVuIHRoZSBkZXZpY2UgaXMgdGlsdGVkICovXG4gIGlzX21vdmluZz86IHRydWU7XG59XG5cbi8qKiBUaGUgYmFja2dyb3VuZCBpcyBhIFBORyBvciBUR1YgKGd6aXBwZWQgc3Vic2V0IG9mIFNWRyB3aXRoIE1JTUUgdHlwZSDigJxhcHBsaWNhdGlvbi94LXRnd2FsbHBhdHRlcm7igJ0pIHBhdHRlcm4gdG8gYmUgY29tYmluZWQgd2l0aCB0aGUgYmFja2dyb3VuZCBmaWxsIGNob3NlbiBieSB0aGUgdXNlci4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQmFja2dyb3VuZFR5cGVQYXR0ZXJuIHtcbiAgLyoqIFR5cGUgb2YgdGhlIGJhY2tncm91bmQsIGFsd2F5cyDigJxwYXR0ZXJu4oCdICovXG4gIHR5cGU6IFwicGF0dGVyblwiO1xuICAvKiogRG9jdW1lbnQgd2l0aCB0aGUgcGF0dGVybiAqL1xuICBkb2N1bWVudDogRG9jdW1lbnQ7XG4gIC8qKiBUaGUgYmFja2dyb3VuZCBmaWxsIHRoYXQgaXMgY29tYmluZWQgd2l0aCB0aGUgcGF0dGVybiAqL1xuICBmaWxsOiBCYWNrZ3JvdW5kRmlsbDtcbiAgLyoqIEludGVuc2l0eSBvZiB0aGUgcGF0dGVybiB3aGVuIGl0IGlzIHNob3duIGFib3ZlIHRoZSBmaWxsZWQgYmFja2dyb3VuZDsgMC0xMDAgKi9cbiAgaW50ZW5zaXR5OiBudW1iZXI7XG4gIC8qKiBUcnVlLCBpZiB0aGUgYmFja2dyb3VuZCBmaWxsIG11c3QgYmUgYXBwbGllZCBvbmx5IHRvIHRoZSBwYXR0ZXJuIGl0c2VsZi4gQWxsIG90aGVyIHBpeGVscyBhcmUgYmxhY2sgaW4gdGhpcyBjYXNlLiBGb3IgZGFyayB0aGVtZXMgb25seSAqL1xuICBpc19pbnZlcnRlZD86IHRydWU7XG4gIC8qKiBUcnVlLCBpZiB0aGUgYmFja2dyb3VuZCBtb3ZlcyBzbGlnaHRseSB3aGVuIHRoZSBkZXZpY2UgaXMgdGlsdGVkICovXG4gIGlzX21vdmluZz86IHRydWU7XG59XG5cbi8qKiBUaGUgYmFja2dyb3VuZCBpcyB0YWtlbiBkaXJlY3RseSBmcm9tIGEgYnVpbHQtaW4gY2hhdCAgdGhlbWUuICovXG5leHBvcnQgaW50ZXJmYWNlIEJhY2tncm91bmRUeXBlQ2hhdFRoZW1lIHtcbiAgLyoqIFR5cGUgb2YgdGhlIGJhY2tncm91bmQsIGFsd2F5cyDigJxjaGF0X3RoZW1l4oCdICovXG4gIHR5cGU6IFwiY2hhdF90aGVtZVwiO1xuICAvKiogTmFtZSBvZiB0aGUgY2hhdCB0aGVtZSwgd2hpY2ggaXMgdXN1YWxseSBhbiBlbW9qaSAqL1xuICB0aGVtZV9uYW1lOiBzdHJpbmc7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgY2hhdCBiYWNrZ3JvdW5kLiAqL1xuZXhwb3J0IGludGVyZmFjZSBDaGF0QmFja2dyb3VuZCB7XG4gIC8qKiBUeXBlIG9mIHRoZSBiYWNrZ3JvdW5kKi9cbiAgdHlwZTogQmFja2dyb3VuZFR5cGU7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgc2VydmljZSBtZXNzYWdlIGFib3V0IGEgbmV3IGZvcnVtIHRvcGljIGNyZWF0ZWQgaW4gdGhlIGNoYXQuICovXG5leHBvcnQgaW50ZXJmYWNlIEZvcnVtVG9waWNDcmVhdGVkIHtcbiAgLyoqIE5hbWUgb2YgdGhlIHRvcGljICovXG4gIG5hbWU6IHN0cmluZztcbiAgLyoqIENvbG9yIG9mIHRoZSB0b3BpYyBpY29uIGluIFJHQiBmb3JtYXQgKi9cbiAgaWNvbl9jb2xvcjogbnVtYmVyO1xuICAvKiogVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGN1c3RvbSBlbW9qaSBzaG93biBhcyB0aGUgdG9waWMgaWNvbiAqL1xuICBpY29uX2N1c3RvbV9lbW9qaV9pZD86IHN0cmluZztcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgYW4gZWRpdGVkIGZvcnVtIHRvcGljLiAqL1xuZXhwb3J0IGludGVyZmFjZSBGb3J1bVRvcGljRWRpdGVkIHtcbiAgLyoqIE5ldyBuYW1lIG9mIHRoZSB0b3BpYywgaWYgaXQgd2FzIGVkaXRlZCAqL1xuICBuYW1lPzogc3RyaW5nO1xuICAvKiogTmV3IGlkZW50aWZpZXIgb2YgdGhlIGN1c3RvbSBlbW9qaSBzaG93biBhcyB0aGUgdG9waWMgaWNvbiwgaWYgaXQgd2FzIGVkaXRlZDsgYW4gZW1wdHkgc3RyaW5nIGlmIHRoZSBpY29uIHdhcyByZW1vdmVkICovXG4gIGljb25fY3VzdG9tX2Vtb2ppX2lkPzogc3RyaW5nO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIHNlcnZpY2UgbWVzc2FnZSBhYm91dCBhIGZvcnVtIHRvcGljIGNsb3NlZCBpbiB0aGUgY2hhdC4gQ3VycmVudGx5IGhvbGRzIG5vIGluZm9ybWF0aW9uLiAqL1xuZXhwb3J0IGludGVyZmFjZSBGb3J1bVRvcGljQ2xvc2VkIHt9XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgc2VydmljZSBtZXNzYWdlIGFib3V0IGEgZm9ydW0gdG9waWMgcmVvcGVuZWQgaW4gdGhlIGNoYXQuIEN1cnJlbnRseSBob2xkcyBubyBpbmZvcm1hdGlvbi4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRm9ydW1Ub3BpY1Jlb3BlbmVkIHt9XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgc2VydmljZSBtZXNzYWdlIGFib3V0IEdlbmVyYWwgZm9ydW0gdG9waWMgaGlkZGVuIGluIHRoZSBjaGF0LiBDdXJyZW50bHkgaG9sZHMgbm8gaW5mb3JtYXRpb24uICovXG5leHBvcnQgaW50ZXJmYWNlIEdlbmVyYWxGb3J1bVRvcGljSGlkZGVuIHt9XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgc2VydmljZSBtZXNzYWdlIGFib3V0IEdlbmVyYWwgZm9ydW0gdG9waWMgdW5oaWRkZW4gaW4gdGhlIGNoYXQuIEN1cnJlbnRseSBob2xkcyBubyBpbmZvcm1hdGlvbi4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgR2VuZXJhbEZvcnVtVG9waWNVbmhpZGRlbiB7fVxuXG4vKiogVGhpcyBvYmplY3QgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgYSB1c2VyIHRoYXQgd2FzIHNoYXJlZCB3aXRoIHRoZSBib3QgdXNpbmcgYSBLZXlib2FyZEJ1dHRvblJlcXVlc3RVc2VycyBidXR0b24uICovXG5leHBvcnQgaW50ZXJmYWNlIFNoYXJlZFVzZXIge1xuICAvKiogSWRlbnRpZmllciBvZiB0aGUgc2hhcmVkIHVzZXIuIFRoZSBib3QgbWF5IG5vdCBoYXZlIGFjY2VzcyB0byB0aGUgdXNlciBhbmQgY291bGQgYmUgdW5hYmxlIHRvIHVzZSB0aGlzIGlkZW50aWZpZXIsIHVubGVzcyB0aGUgdXNlciBpcyBhbHJlYWR5IGtub3duIHRvIHRoZSBib3QgYnkgc29tZSBvdGhlciBtZWFucy4gKi9cbiAgdXNlcl9pZDogbnVtYmVyO1xuICAvKiogRmlyc3QgbmFtZSBvZiB0aGUgdXNlciwgaWYgdGhlIG5hbWUgd2FzIHJlcXVlc3RlZCBieSB0aGUgYm90ICovXG4gIGZpcnN0X25hbWU/OiBzdHJpbmc7XG4gIC8qKiBMYXN0IG5hbWUgb2YgdGhlIHVzZXIsIGlmIHRoZSBuYW1lIHdhcyByZXF1ZXN0ZWQgYnkgdGhlIGJvdCAqL1xuICBsYXN0X25hbWU/OiBzdHJpbmc7XG4gIC8qKiBVc2VybmFtZSBvZiB0aGUgdXNlciwgaWYgdGhlIHVzZXJuYW1lIHdhcyByZXF1ZXN0ZWQgYnkgdGhlIGJvdCAqL1xuICB1c2VybmFtZT86IHN0cmluZztcbiAgLyoqIEF2YWlsYWJsZSBzaXplcyBvZiB0aGUgY2hhdCBwaG90bywgaWYgdGhlIHBob3RvIHdhcyByZXF1ZXN0ZWQgYnkgdGhlIGJvdCAqL1xuICBwaG90bz86IFBob3RvU2l6ZVtdO1xufVxuXG4vKiogVGhpcyBvYmplY3QgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHVzZXIgd2hvc2UgaWRlbnRpZmllciB3YXMgc2hhcmVkIHdpdGggdGhlIGJvdCB1c2luZyBhIEtleWJvYXJkQnV0dG9uUmVxdWVzdFVzZXJzIGJ1dHRvbi4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVXNlcnNTaGFyZWQge1xuICAvKiogSWRlbnRpZmllciBvZiB0aGUgcmVxdWVzdCAqL1xuICByZXF1ZXN0X2lkOiBudW1iZXI7XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCB1c2VycyBzaGFyZWQgd2l0aCB0aGUgYm90LiAqL1xuICB1c2VyczogU2hhcmVkVXNlcltdO1xufVxuXG4vKiogVGhpcyBvYmplY3QgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgYSBjaGF0IHRoYXQgd2FzIHNoYXJlZCB3aXRoIHRoZSBib3QgdXNpbmcgYSBLZXlib2FyZEJ1dHRvblJlcXVlc3RDaGF0IGJ1dHRvbi4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ2hhdFNoYXJlZCB7XG4gIC8qKiBJZGVudGlmaWVyIG9mIHRoZSByZXF1ZXN0ICovXG4gIHJlcXVlc3RfaWQ6IG51bWJlcjtcbiAgLyoqIElkZW50aWZpZXIgb2YgdGhlIHNoYXJlZCBjaGF0LiBUaGUgYm90IG1heSBub3QgaGF2ZSBhY2Nlc3MgdG8gdGhlIGNoYXQgYW5kIGNvdWxkIGJlIHVuYWJsZSB0byB1c2UgdGhpcyBpZGVudGlmaWVyLCB1bmxlc3MgdGhlIGNoYXQgaXMgYWxyZWFkeSBrbm93biB0byB0aGUgYm90IGJ5IHNvbWUgb3RoZXIgbWVhbnMuICovXG4gIGNoYXRfaWQ6IG51bWJlcjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBjaGF0LCBpZiB0aGUgdGl0bGUgd2FzIHJlcXVlc3RlZCBieSB0aGUgYm90LiAqL1xuICB0aXRsZT86IHN0cmluZztcbiAgLyoqIFVzZXJuYW1lIG9mIHRoZSBjaGF0LCBpZiB0aGUgdXNlcm5hbWUgd2FzIHJlcXVlc3RlZCBieSB0aGUgYm90IGFuZCBhdmFpbGFibGUuICovXG4gIHVzZXJuYW1lPzogc3RyaW5nO1xuICAvKiogQXZhaWxhYmxlIHNpemVzIG9mIHRoZSBjaGF0IHBob3RvLCBpZiB0aGUgcGhvdG8gd2FzIHJlcXVlc3RlZCBieSB0aGUgYm90ICovXG4gIHBob3RvPzogUGhvdG9TaXplW107XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgc2VydmljZSBtZXNzYWdlIGFib3V0IGEgdXNlciBhbGxvd2luZyBhIGJvdCB0byB3cml0ZSBtZXNzYWdlcyBhZnRlciBhZGRpbmcgaXQgdG8gdGhlIGF0dGFjaG1lbnQgbWVudSwgbGF1bmNoaW5nIGEgV2ViIEFwcCBmcm9tIGEgbGluaywgb3IgYWNjZXB0aW5nIGFuIGV4cGxpY2l0IHJlcXVlc3QgZnJvbSBhIFdlYiBBcHAgc2VudCBieSB0aGUgbWV0aG9kIHJlcXVlc3RXcml0ZUFjY2Vzcy4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgV3JpdGVBY2Nlc3NBbGxvd2VkIHtcbiAgLyoqIFRydWUsIGlmIHRoZSBhY2Nlc3Mgd2FzIGdyYW50ZWQgYWZ0ZXIgdGhlIHVzZXIgYWNjZXB0ZWQgYW4gZXhwbGljaXQgcmVxdWVzdCBmcm9tIGEgV2ViIEFwcCBzZW50IGJ5IHRoZSBtZXRob2QgcmVxdWVzdFdyaXRlQWNjZXNzICovXG4gIGZyb21fcmVxdWVzdD86IGJvb2xlYW47XG4gIC8qKiBOYW1lIG9mIHRoZSBXZWIgQXBwLCBpZiB0aGUgYWNjZXNzIHdhcyBncmFudGVkIHdoZW4gdGhlIFdlYiBBcHAgd2FzIGxhdW5jaGVkIGZyb20gYSBsaW5rICovXG4gIHdlYl9hcHBfbmFtZT86IHN0cmluZztcbiAgLyoqIFRydWUsIGlmIHRoZSBhY2Nlc3Mgd2FzIGdyYW50ZWQgd2hlbiB0aGUgYm90IHdhcyBhZGRlZCB0byB0aGUgYXR0YWNobWVudCBvciBzaWRlIG1lbnUgKi9cbiAgZnJvbV9hdHRhY2htZW50X21lbnU/OiBib29sZWFuO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIHNlcnZpY2UgbWVzc2FnZSBhYm91dCBhIHZpZGVvIGNoYXQgc2NoZWR1bGVkIGluIHRoZSBjaGF0LiAqL1xuZXhwb3J0IGludGVyZmFjZSBWaWRlb0NoYXRTY2hlZHVsZWQge1xuICAvKiogUG9pbnQgaW4gdGltZSAoVW5peCB0aW1lc3RhbXApIHdoZW4gdGhlIHZpZGVvIGNoYXQgaXMgc3VwcG9zZWQgdG8gYmUgc3RhcnRlZCBieSBhIGNoYXQgYWRtaW5pc3RyYXRvciAqL1xuICBzdGFydF9kYXRlOiBudW1iZXI7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgc2VydmljZSBtZXNzYWdlIGFib3V0IGEgdmlkZW8gY2hhdCBzdGFydGVkIGluIHRoZSBjaGF0LiBDdXJyZW50bHkgaG9sZHMgbm8gaW5mb3JtYXRpb24uICovXG5leHBvcnQgaW50ZXJmYWNlIFZpZGVvQ2hhdFN0YXJ0ZWQge31cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgYSB2aWRlbyBjaGF0IGVuZGVkIGluIHRoZSBjaGF0LiAqL1xuZXhwb3J0IGludGVyZmFjZSBWaWRlb0NoYXRFbmRlZCB7XG4gIC8qKiBWaWRlbyBjaGF0IGR1cmF0aW9uIGluIHNlY29uZHMgKi9cbiAgZHVyYXRpb246IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgbmV3IG1lbWJlcnMgaW52aXRlZCB0byBhIHZpZGVvIGNoYXQuICovXG5leHBvcnQgaW50ZXJmYWNlIFZpZGVvQ2hhdFBhcnRpY2lwYW50c0ludml0ZWQge1xuICAvKiogTmV3IG1lbWJlcnMgdGhhdCB3ZXJlIGludml0ZWQgdG8gdGhlIHZpZGVvIGNoYXQgKi9cbiAgdXNlcnM6IFVzZXJbXTtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgdGhlIGNyZWF0aW9uIG9mIGEgc2NoZWR1bGVkIGdpdmVhd2F5LiAqL1xuZXhwb3J0IGludGVyZmFjZSBHaXZlYXdheUNyZWF0ZWQge1xuICAvKiogVGhlIG51bWJlciBvZiBUZWxlZ3JhbSBTdGFycyB0byBiZSBzcGxpdCBiZXR3ZWVuIGdpdmVhd2F5IHdpbm5lcnM7IGZvciBUZWxlZ3JhbSBTdGFyIGdpdmVhd2F5cyBvbmx5ICovXG4gIHByaXplX3N0YXJfY291bnQ/OiBudW1iZXI7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgbWVzc2FnZSBhYm91dCBhIHNjaGVkdWxlZCBnaXZlYXdheS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgR2l2ZWF3YXkge1xuICAvKiogVGhlIGxpc3Qgb2YgY2hhdHMgd2hpY2ggdGhlIHVzZXIgbXVzdCBqb2luIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBnaXZlYXdheSAqL1xuICBjaGF0czogQ2hhdFtdO1xuICAvKiogUG9pbnQgaW4gdGltZSAoVW5peCB0aW1lc3RhbXApIHdoZW4gd2lubmVycyBvZiB0aGUgZ2l2ZWF3YXkgd2lsbCBiZSBzZWxlY3RlZCAqL1xuICB3aW5uZXJzX3NlbGVjdGlvbl9kYXRlOiBudW1iZXI7XG4gIC8qKiBUaGUgbnVtYmVyIG9mIHVzZXJzIHdoaWNoIGFyZSBzdXBwb3NlZCB0byBiZSBzZWxlY3RlZCBhcyB3aW5uZXJzIG9mIHRoZSBnaXZlYXdheSAqL1xuICB3aW5uZXJfY291bnQ6IG51bWJlcjtcbiAgLyoqIFRydWUsIGlmIG9ubHkgdXNlcnMgd2hvIGpvaW4gdGhlIGNoYXRzIGFmdGVyIHRoZSBnaXZlYXdheSBzdGFydGVkIHNob3VsZCBiZSBlbGlnaWJsZSB0byB3aW4gKi9cbiAgb25seV9uZXdfbWVtYmVycz86IHRydWU7XG4gIC8qKiBUcnVlLCBpZiB0aGUgbGlzdCBvZiBnaXZlYXdheSB3aW5uZXJzIHdpbGwgYmUgdmlzaWJsZSB0byBldmVyeW9uZSAqL1xuICBoYXNfcHVibGljX3dpbm5lcnM/OiB0cnVlO1xuICAvKiogRGVzY3JpcHRpb24gb2YgYWRkaXRpb25hbCBnaXZlYXdheSBwcml6ZSAqL1xuICBwcml6ZV9kZXNjcmlwdGlvbj86IHN0cmluZztcbiAgLyoqIEEgbGlzdCBvZiB0d28tbGV0dGVyIElTTyAzMTY2LTEgYWxwaGEtMiBjb3VudHJ5IGNvZGVzIGluZGljYXRpbmcgdGhlIGNvdW50cmllcyBmcm9tIHdoaWNoIGVsaWdpYmxlIHVzZXJzIGZvciB0aGUgZ2l2ZWF3YXkgbXVzdCBjb21lLiBJZiBlbXB0eSwgdGhlbiBhbGwgdXNlcnMgY2FuIHBhcnRpY2lwYXRlIGluIHRoZSBnaXZlYXdheS4gVXNlcnMgd2l0aCBhIHBob25lIG51bWJlciB0aGF0IHdhcyBib3VnaHQgb24gRnJhZ21lbnQgY2FuIGFsd2F5cyBwYXJ0aWNpcGF0ZSBpbiBnaXZlYXdheXMuICovXG4gIGNvdW50cnlfY29kZXM/OiBzdHJpbmdbXTtcbiAgLyoqIFRoZSBudW1iZXIgb2YgVGVsZWdyYW0gU3RhcnMgdG8gYmUgc3BsaXQgYmV0d2VlbiBnaXZlYXdheSB3aW5uZXJzOyBmb3IgVGVsZWdyYW0gU3RhciBnaXZlYXdheXMgb25seSAqL1xuICBwcml6ZV9zdGFyX2NvdW50PzogbnVtYmVyO1xuICAvKiogVGhlIG51bWJlciBvZiBtb250aHMgdGhlIFRlbGVncmFtIFByZW1pdW0gc3Vic2NyaXB0aW9uIHdvbiBmcm9tIHRoZSBnaXZlYXdheSB3aWxsIGJlIGFjdGl2ZSBmb3I7IGZvciBUZWxlZ3JhbSBQcmVtaXVtIGdpdmVhd2F5cyBvbmx5ICovXG4gIHByZW1pdW1fc3Vic2NyaXB0aW9uX21vbnRoX2NvdW50PzogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIG1lc3NhZ2UgYWJvdXQgdGhlIGNvbXBsZXRpb24gb2YgYSBnaXZlYXdheSB3aXRoIHB1YmxpYyB3aW5uZXJzLiAqL1xuZXhwb3J0IGludGVyZmFjZSBHaXZlYXdheVdpbm5lcnMge1xuICAvKiogVGhlIGNoYXQgdGhhdCBjcmVhdGVkIHRoZSBnaXZlYXdheSAqL1xuICBjaGF0OiBDaGF0O1xuICAvKiogSWRlbnRpZmllciBvZiB0aGUgbWVzc2FnZSB3aXRoIHRoZSBnaXZlYXdheSBpbiB0aGUgY2hhdCAqL1xuICBnaXZlYXdheV9tZXNzYWdlX2lkOiBudW1iZXI7XG4gIC8qKiBQb2ludCBpbiB0aW1lIChVbml4IHRpbWVzdGFtcCkgd2hlbiB3aW5uZXJzIG9mIHRoZSBnaXZlYXdheSB3ZXJlIHNlbGVjdGVkICovXG4gIHdpbm5lcnNfc2VsZWN0aW9uX2RhdGU6IG51bWJlcjtcbiAgLyoqIFRvdGFsIG51bWJlciBvZiB3aW5uZXJzIGluIHRoZSBnaXZlYXdheSAqL1xuICB3aW5uZXJfY291bnQ6IG51bWJlcjtcbiAgLyoqIExpc3Qgb2YgdXAgdG8gMTAwIHdpbm5lcnMgb2YgdGhlIGdpdmVhd2F5ICovXG4gIHdpbm5lcnM6IFVzZXJbXTtcbiAgLyoqIFRoZSBudW1iZXIgb2Ygb3RoZXIgY2hhdHMgdGhlIHVzZXIgaGFkIHRvIGpvaW4gaW4gb3JkZXIgdG8gYmUgZWxpZ2libGUgZm9yIHRoZSBnaXZlYXdheSAqL1xuICBhZGRpdGlvbmFsX2NoYXRfY291bnQ/OiBudW1iZXI7XG4gIC8qKiBUaGUgbnVtYmVyIG9mIFRlbGVncmFtIFN0YXJzIHRoYXQgd2VyZSBzcGxpdCBiZXR3ZWVuIGdpdmVhd2F5IHdpbm5lcnM7IGZvciBUZWxlZ3JhbSBTdGFyIGdpdmVhd2F5cyBvbmx5ICovXG4gIHByaXplX3N0YXJfY291bnQ/OiBudW1iZXI7XG4gIC8qKiBUaGUgbnVtYmVyIG9mIG1vbnRocyB0aGUgVGVsZWdyYW0gUHJlbWl1bSBzdWJzY3JpcHRpb24gd29uIGZyb20gdGhlIGdpdmVhd2F5IHdpbGwgYmUgYWN0aXZlIGZvcjsgZm9yIFRlbGVncmFtIFByZW1pdW0gZ2l2ZWF3YXlzIG9ubHkgKi9cbiAgcHJlbWl1bV9zdWJzY3JpcHRpb25fbW9udGhfY291bnQ/OiBudW1iZXI7XG4gIC8qKiBOdW1iZXIgb2YgdW5kaXN0cmlidXRlZCBwcml6ZXMgKi9cbiAgdW5jbGFpbWVkX3ByaXplX2NvdW50PzogbnVtYmVyO1xuICAvKiogVHJ1ZSwgaWYgb25seSB1c2VycyB3aG8gaGFkIGpvaW5lZCB0aGUgY2hhdHMgYWZ0ZXIgdGhlIGdpdmVhd2F5IHN0YXJ0ZWQgd2VyZSBlbGlnaWJsZSB0byB3aW4gKi9cbiAgb25seV9uZXdfbWVtYmVycz86IHRydWU7XG4gIC8qKiBUcnVlLCBpZiB0aGUgZ2l2ZWF3YXkgd2FzIGNhbmNlbGVkIGJlY2F1c2UgdGhlIHBheW1lbnQgZm9yIGl0IHdhcyByZWZ1bmRlZCAqL1xuICB3YXNfcmVmdW5kZWQ/OiB0cnVlO1xuICAvKiogRGVzY3JpcHRpb24gb2YgYWRkaXRpb25hbCBnaXZlYXdheSBwcml6ZSAqL1xuICBwcml6ZV9kZXNjcmlwdGlvbj86IHN0cmluZztcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzZXJ2aWNlIG1lc3NhZ2UgYWJvdXQgdGhlIGNvbXBsZXRpb24gb2YgYSBnaXZlYXdheSB3aXRob3V0IHB1YmxpYyB3aW5uZXJzLiAqL1xuZXhwb3J0IGludGVyZmFjZSBHaXZlYXdheUNvbXBsZXRlZCB7XG4gIC8qKiBOdW1iZXIgb2Ygd2lubmVycyBpbiB0aGUgZ2l2ZWF3YXkgKi9cbiAgd2lubmVyX2NvdW50OiBudW1iZXI7XG4gIC8qKiBOdW1iZXIgb2YgdW5kaXN0cmlidXRlZCBwcml6ZXMgKi9cbiAgdW5jbGFpbWVkX3ByaXplX2NvdW50PzogbnVtYmVyO1xuICAvKiogTWVzc2FnZSB3aXRoIHRoZSBnaXZlYXdheSB0aGF0IHdhcyBjb21wbGV0ZWQsIGlmIGl0IHdhc24ndCBkZWxldGVkICovXG4gIGdpdmVhd2F5X21lc3NhZ2U/OiBNZXNzYWdlO1xuICAvKiogVHJ1ZSwgaWYgdGhlIGdpdmVhd2F5IGlzIGEgVGVsZWdyYW0gU3RhciBnaXZlYXdheS4gT3RoZXJ3aXNlLCBjdXJyZW50bHksIHRoZSBnaXZlYXdheSBpcyBhIFRlbGVncmFtIFByZW1pdW0gZ2l2ZWF3YXkuICovXG4gIGlzX3N0YXJfZ2l2ZWF3YXk/OiB0cnVlO1xufVxuXG4vKiogRGVzY3JpYmVzIHRoZSBvcHRpb25zIHVzZWQgZm9yIGxpbmsgcHJldmlldyBnZW5lcmF0aW9uLiAqL1xuZXhwb3J0IGludGVyZmFjZSBMaW5rUHJldmlld09wdGlvbnMge1xuICAvKiogVHJ1ZSwgaWYgdGhlIGxpbmsgcHJldmlldyBpcyBkaXNhYmxlZCAqL1xuICBpc19kaXNhYmxlZD86IGJvb2xlYW47XG4gIC8qKiBVUkwgdG8gdXNlIGZvciB0aGUgbGluayBwcmV2aWV3LiBJZiBlbXB0eSwgdGhlbiB0aGUgZmlyc3QgVVJMIGZvdW5kIGluIHRoZSBtZXNzYWdlIHRleHQgd2lsbCBiZSB1c2VkICovXG4gIHVybD86IHN0cmluZztcbiAgLyoqIFRydWUsIGlmIHRoZSBtZWRpYSBpbiB0aGUgbGluayBwcmV2aWV3IGlzIHN1cHBvc2VkIHRvIGJlIHNocnVuazsgaWdub3JlZCBpZiB0aGUgVVJMIGlzbid0IGV4cGxpY2l0bHkgc3BlY2lmaWVkIG9yIG1lZGlhIHNpemUgY2hhbmdlIGlzbid0IHN1cHBvcnRlZCBmb3IgdGhlIHByZXZpZXcgKi9cbiAgcHJlZmVyX3NtYWxsX21lZGlhPzogYm9vbGVhbjtcbiAgLyoqIFRydWUsIGlmIHRoZSBtZWRpYSBpbiB0aGUgbGluayBwcmV2aWV3IGlzIHN1cHBvc2VkIHRvIGJlIGVubGFyZ2VkOyBpZ25vcmVkIGlmIHRoZSBVUkwgaXNuJ3QgZXhwbGljaXRseSBzcGVjaWZpZWQgb3IgbWVkaWEgc2l6ZSBjaGFuZ2UgaXNuJ3Qgc3VwcG9ydGVkIGZvciB0aGUgcHJldmlldyAqL1xuICBwcmVmZXJfbGFyZ2VfbWVkaWE/OiBib29sZWFuO1xuICAvKiogVHJ1ZSwgaWYgdGhlIGxpbmsgcHJldmlldyBtdXN0IGJlIHNob3duIGFib3ZlIHRoZSBtZXNzYWdlIHRleHQ7IG90aGVyd2lzZSwgdGhlIGxpbmsgcHJldmlldyB3aWxsIGJlIHNob3duIGJlbG93IHRoZSBtZXNzYWdlIHRleHQgKi9cbiAgc2hvd19hYm92ZV90ZXh0PzogYm9vbGVhbjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzdGlja2VyLiAqL1xuZXhwb3J0IGludGVyZmFjZSBTdGlja2VyIHtcbiAgLyoqIElkZW50aWZpZXIgZm9yIHRoaXMgZmlsZSwgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZG93bmxvYWQgb3IgcmV1c2UgdGhlIGZpbGUgKi9cbiAgZmlsZV9pZDogc3RyaW5nO1xuICAvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgZmlsZSwgd2hpY2ggaXMgc3VwcG9zZWQgdG8gYmUgdGhlIHNhbWUgb3ZlciB0aW1lIGFuZCBmb3IgZGlmZmVyZW50IGJvdHMuIENhbid0IGJlIHVzZWQgdG8gZG93bmxvYWQgb3IgcmV1c2UgdGhlIGZpbGUuICovXG4gIGZpbGVfdW5pcXVlX2lkOiBzdHJpbmc7XG4gIC8qKiBUeXBlIG9mIHRoZSBzdGlja2VyLCBjdXJyZW50bHkgb25lIG9mIOKAnHJlZ3VsYXLigJ0sIOKAnG1hc2vigJ0sIOKAnGN1c3RvbV9lbW9qaeKAnS4gVGhlIHR5cGUgb2YgdGhlIHN0aWNrZXIgaXMgaW5kZXBlbmRlbnQgZnJvbSBpdHMgZm9ybWF0LCB3aGljaCBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBmaWVsZHMgaXNfYW5pbWF0ZWQgYW5kIGlzX3ZpZGVvLiAqL1xuICB0eXBlOiBcInJlZ3VsYXJcIiB8IFwibWFza1wiIHwgXCJjdXN0b21fZW1vamlcIjtcbiAgLyoqIFN0aWNrZXIgd2lkdGggKi9cbiAgd2lkdGg6IG51bWJlcjtcbiAgLyoqIFN0aWNrZXIgaGVpZ2h0ICovXG4gIGhlaWdodDogbnVtYmVyO1xuICAvKiogVHJ1ZSwgaWYgdGhlIHN0aWNrZXIgaXMgYW5pbWF0ZWQgKi9cbiAgaXNfYW5pbWF0ZWQ6IGJvb2xlYW47XG4gIC8qKiBUcnVlLCBpZiB0aGUgc3RpY2tlciBpcyBhIHZpZGVvIHN0aWNrZXIgKi9cbiAgaXNfdmlkZW86IGJvb2xlYW47XG4gIC8qKiBTdGlja2VyIHRodW1ibmFpbCBpbiB0aGUgLldFQlAgb3IgLkpQRyBmb3JtYXQgKi9cbiAgdGh1bWJuYWlsPzogUGhvdG9TaXplO1xuICAvKiogRW1vamkgYXNzb2NpYXRlZCB3aXRoIHRoZSBzdGlja2VyICovXG4gIGVtb2ppPzogc3RyaW5nO1xuICAvKiogTmFtZSBvZiB0aGUgc3RpY2tlciBzZXQgdG8gd2hpY2ggdGhlIHN0aWNrZXIgYmVsb25ncyAqL1xuICBzZXRfbmFtZT86IHN0cmluZztcbiAgLyoqIEZvciBwcmVtaXVtIHJlZ3VsYXIgc3RpY2tlcnMsIHByZW1pdW0gYW5pbWF0aW9uIGZvciB0aGUgc3RpY2tlciAqL1xuICBwcmVtaXVtX2FuaW1hdGlvbj86IEZpbGU7XG4gIC8qKiBGb3IgbWFzayBzdGlja2VycywgdGhlIHBvc2l0aW9uIHdoZXJlIHRoZSBtYXNrIHNob3VsZCBiZSBwbGFjZWQgKi9cbiAgbWFza19wb3NpdGlvbj86IE1hc2tQb3NpdGlvbjtcbiAgLyoqIEZvciBjdXN0b20gZW1vamkgc3RpY2tlcnMsIHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBjdXN0b20gZW1vamkgKi9cbiAgY3VzdG9tX2Vtb2ppX2lkPzogc3RyaW5nO1xuICAvKiogRmlsZSBzaXplIGluIGJ5dGVzICovXG4gIGZpbGVfc2l6ZT86IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBzdGlja2VyIHNldC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3RpY2tlclNldCB7XG4gIC8qKiBTdGlja2VyIHNldCBuYW1lICovXG4gIG5hbWU6IHN0cmluZztcbiAgLyoqIFN0aWNrZXIgc2V0IHRpdGxlICovXG4gIHRpdGxlOiBzdHJpbmc7XG4gIC8qKiBUeXBlIG9mIHN0aWNrZXJzIGluIHRoZSBzZXQsIGN1cnJlbnRseSBvbmUgb2Yg4oCccmVndWxhcuKAnSwg4oCcbWFza+KAnSwg4oCcY3VzdG9tX2Vtb2pp4oCdICovXG4gIHN0aWNrZXJfdHlwZTogXCJyZWd1bGFyXCIgfCBcIm1hc2tcIiB8IFwiY3VzdG9tX2Vtb2ppXCI7XG4gIC8qKiBMaXN0IG9mIGFsbCBzZXQgc3RpY2tlcnMgKi9cbiAgc3RpY2tlcnM6IFN0aWNrZXJbXTtcbiAgLyoqIFN0aWNrZXIgc2V0IHRodW1ibmFpbCBpbiB0aGUgLldFQlAsIC5UR1MsIG9yIC5XRUJNIGZvcm1hdCAqL1xuICB0aHVtYm5haWw/OiBQaG90b1NpemU7XG59XG5cbi8qKiBUaGlzIG9iamVjdCBkZXNjcmliZXMgdGhlIHBvc2l0aW9uIG9uIGZhY2VzIHdoZXJlIGEgbWFzayBzaG91bGQgYmUgcGxhY2VkIGJ5IGRlZmF1bHQuICovXG5leHBvcnQgaW50ZXJmYWNlIE1hc2tQb3NpdGlvbiB7XG4gIC8qKiBUaGUgcGFydCBvZiB0aGUgZmFjZSByZWxhdGl2ZSB0byB3aGljaCB0aGUgbWFzayBzaG91bGQgYmUgcGxhY2VkLiBPbmUgb2Yg4oCcZm9yZWhlYWTigJ0sIOKAnGV5ZXPigJ0sIOKAnG1vdXRo4oCdLCBvciDigJxjaGlu4oCdLiAqL1xuICBwb2ludDogXCJmb3JlaGVhZFwiIHwgXCJleWVzXCIgfCBcIm1vdXRoXCIgfCBcImNoaW5cIjtcbiAgLyoqIFNoaWZ0IGJ5IFgtYXhpcyBtZWFzdXJlZCBpbiB3aWR0aHMgb2YgdGhlIG1hc2sgc2NhbGVkIHRvIHRoZSBmYWNlIHNpemUsIGZyb20gbGVmdCB0byByaWdodC4gRm9yIGV4YW1wbGUsIGNob29zaW5nIC0xLjAgd2lsbCBwbGFjZSBtYXNrIGp1c3QgdG8gdGhlIGxlZnQgb2YgdGhlIGRlZmF1bHQgbWFzayBwb3NpdGlvbi4gKi9cbiAgeF9zaGlmdDogbnVtYmVyO1xuICAvKiogU2hpZnQgYnkgWS1heGlzIG1lYXN1cmVkIGluIGhlaWdodHMgb2YgdGhlIG1hc2sgc2NhbGVkIHRvIHRoZSBmYWNlIHNpemUsIGZyb20gdG9wIHRvIGJvdHRvbS4gRm9yIGV4YW1wbGUsIDEuMCB3aWxsIHBsYWNlIHRoZSBtYXNrIGp1c3QgYmVsb3cgdGhlIGRlZmF1bHQgbWFzayBwb3NpdGlvbi4gKi9cbiAgeV9zaGlmdDogbnVtYmVyO1xuICAvKiogTWFzayBzY2FsaW5nIGNvZWZmaWNpZW50LiBGb3IgZXhhbXBsZSwgMi4wIG1lYW5zIGRvdWJsZSBzaXplLiAqL1xuICBzY2FsZTogbnVtYmVyO1xufVxuXG4vKiogVGhpcyBvYmplY3QgcmVwcmVzZW50cyBhIGdhbWUuIFVzZSBCb3RGYXRoZXIgdG8gY3JlYXRlIGFuZCBlZGl0IGdhbWVzLCB0aGVpciBzaG9ydCBuYW1lcyB3aWxsIGFjdCBhcyB1bmlxdWUgaWRlbnRpZmllcnMuICovXG5leHBvcnQgaW50ZXJmYWNlIEdhbWUge1xuICAvKiogVGl0bGUgb2YgdGhlIGdhbWUgKi9cbiAgdGl0bGU6IHN0cmluZztcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHRoZSBnYW1lICovXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIC8qKiBQaG90byB0aGF0IHdpbGwgYmUgZGlzcGxheWVkIGluIHRoZSBnYW1lIG1lc3NhZ2UgaW4gY2hhdHMuICovXG4gIHBob3RvOiBQaG90b1NpemVbXTtcbiAgLyoqIEJyaWVmIGRlc2NyaXB0aW9uIG9mIHRoZSBnYW1lIG9yIGhpZ2ggc2NvcmVzIGluY2x1ZGVkIGluIHRoZSBnYW1lIG1lc3NhZ2UuIENhbiBiZSBhdXRvbWF0aWNhbGx5IGVkaXRlZCB0byBpbmNsdWRlIGN1cnJlbnQgaGlnaCBzY29yZXMgZm9yIHRoZSBnYW1lIHdoZW4gdGhlIGJvdCBjYWxscyBzZXRHYW1lU2NvcmUsIG9yIG1hbnVhbGx5IGVkaXRlZCB1c2luZyBlZGl0TWVzc2FnZVRleHQuIDAtNDA5NiBjaGFyYWN0ZXJzLiAqL1xuICB0ZXh0OiBzdHJpbmc7XG4gIC8qKiBTcGVjaWFsIGVudGl0aWVzIHRoYXQgYXBwZWFyIGluIHRleHQsIHN1Y2ggYXMgdXNlcm5hbWVzLCBVUkxzLCBib3QgY29tbWFuZHMsIGV0Yy4gKi9cbiAgdGV4dF9lbnRpdGllczogTWVzc2FnZUVudGl0eVtdO1xuICAvKiogQW5pbWF0aW9uIHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgaW4gdGhlIGdhbWUgbWVzc2FnZSBpbiBjaGF0cy4gVXBsb2FkIHZpYSBCb3RGYXRoZXIgKi9cbiAgYW5pbWF0aW9uOiBBbmltYXRpb247XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIG9uZSByb3cgb2YgdGhlIGhpZ2ggc2NvcmVzIHRhYmxlIGZvciBhIGdhbWUuICovXG5leHBvcnQgaW50ZXJmYWNlIEdhbWVIaWdoU2NvcmUge1xuICAvKiogUG9zaXRpb24gaW4gaGlnaCBzY29yZSB0YWJsZSBmb3IgdGhlIGdhbWUgKi9cbiAgcG9zaXRpb246IG51bWJlcjtcbiAgLyoqIFVzZXIgKi9cbiAgdXNlcjogVXNlcjtcbiAgLyoqIFNjb3JlICovXG4gIHNjb3JlOiBudW1iZXI7XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIGEgZmlsZSByZWFkeSB0byBiZSBkb3dubG9hZGVkLiBUaGUgZmlsZSBjYW4gYmUgZG93bmxvYWRlZCB2aWEgdGhlIGxpbmsgaHR0cHM6Ly9hcGkudGVsZWdyYW0ub3JnL2ZpbGUvYm90PHRva2VuPi88ZmlsZV9wYXRoPi4gSXQgaXMgZ3VhcmFudGVlZCB0aGF0IHRoZSBsaW5rIHdpbGwgYmUgdmFsaWQgZm9yIGF0IGxlYXN0IDEgaG91ci4gV2hlbiB0aGUgbGluayBleHBpcmVzLCBhIG5ldyBvbmUgY2FuIGJlIHJlcXVlc3RlZCBieSBjYWxsaW5nIGdldEZpbGUuICovXG5leHBvcnQgaW50ZXJmYWNlIEZpbGUge1xuICAvKiogSWRlbnRpZmllciBmb3IgdGhpcyBmaWxlLCB3aGljaCBjYW4gYmUgdXNlZCB0byBkb3dubG9hZCBvciByZXVzZSB0aGUgZmlsZSAqL1xuICBmaWxlX2lkOiBzdHJpbmc7XG4gIC8qKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBmaWxlLCB3aGljaCBpcyBzdXBwb3NlZCB0byBiZSB0aGUgc2FtZSBvdmVyIHRpbWUgYW5kIGZvciBkaWZmZXJlbnQgYm90cy4gQ2FuJ3QgYmUgdXNlZCB0byBkb3dubG9hZCBvciByZXVzZSB0aGUgZmlsZS4gKi9cbiAgZmlsZV91bmlxdWVfaWQ6IHN0cmluZztcbiAgLyoqIEZpbGUgc2l6ZSBpbiBieXRlcyAqL1xuICBmaWxlX3NpemU/OiBudW1iZXI7XG4gIC8qKiBGaWxlIHBhdGguIFVzZSBodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvZmlsZS9ib3Q8dG9rZW4+LzxmaWxlX3BhdGg+IHRvIGdldCB0aGUgZmlsZS4gKi9cbiAgZmlsZV9wYXRoPzogc3RyaW5nO1xufVxuXG4vKiogVGhpcyBvYmplY3QgZGVzY3JpYmVzIHRoZSB0eXBlIG9mIGEgcmVhY3Rpb24uIEN1cnJlbnRseSwgaXQgY2FuIGJlIG9uZSBvZlxuXG4tIFJlYWN0aW9uVHlwZUVtb2ppXG4tIFJlYWN0aW9uVHlwZUN1c3RvbUVtb2ppXG4tIFJlYWN0aW9uVHlwZVBhaWQgKi9cbmV4cG9ydCB0eXBlIFJlYWN0aW9uVHlwZSA9XG4gIHwgUmVhY3Rpb25UeXBlRW1vamlcbiAgfCBSZWFjdGlvblR5cGVDdXN0b21FbW9qaVxuICB8IFJlYWN0aW9uVHlwZVBhaWQ7XG5cbi8qKiBUaGUgcmVhY3Rpb24gaXMgYmFzZWQgb24gYW4gZW1vamkuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlYWN0aW9uVHlwZUVtb2ppIHtcbiAgLyoqIFR5cGUgb2YgdGhlIHJlYWN0aW9uLCBhbHdheXMg4oCcZW1vamnigJ0gKi9cbiAgdHlwZTogXCJlbW9qaVwiO1xuICAvKiogUmVhY3Rpb24gZW1vamkuIEN1cnJlbnRseSwgaXQgY2FuIGJlIG9uZSBvZiBcIvCfkY1cIiwgXCLwn5GOXCIsIFwi4p2kXCIsIFwi8J+UpVwiLCBcIvCfpbBcIiwgXCLwn5GPXCIsIFwi8J+YgVwiLCBcIvCfpJRcIiwgXCLwn6SvXCIsIFwi8J+YsVwiLCBcIvCfpKxcIiwgXCLwn5iiXCIsIFwi8J+OiVwiLCBcIvCfpKlcIiwgXCLwn6SuXCIsIFwi8J+SqVwiLCBcIvCfmY9cIiwgXCLwn5GMXCIsIFwi8J+VilwiLCBcIvCfpKFcIiwgXCLwn6WxXCIsIFwi8J+ltFwiLCBcIvCfmI1cIiwgXCLwn5CzXCIsIFwi4p2k4oCN8J+UpVwiLCBcIvCfjJpcIiwgXCLwn4ytXCIsIFwi8J+Sr1wiLCBcIvCfpKNcIiwgXCLimqFcIiwgXCLwn42MXCIsIFwi8J+PhlwiLCBcIvCfkpRcIiwgXCLwn6SoXCIsIFwi8J+YkFwiLCBcIvCfjZNcIiwgXCLwn42+XCIsIFwi8J+Si1wiLCBcIvCflpVcIiwgXCLwn5iIXCIsIFwi8J+YtFwiLCBcIvCfmK1cIiwgXCLwn6STXCIsIFwi8J+Ru1wiLCBcIvCfkajigI3wn5K7XCIsIFwi8J+RgFwiLCBcIvCfjoNcIiwgXCLwn5mIXCIsIFwi8J+Yh1wiLCBcIvCfmKhcIiwgXCLwn6SdXCIsIFwi4pyNXCIsIFwi8J+kl1wiLCBcIvCfq6FcIiwgXCLwn46FXCIsIFwi8J+OhFwiLCBcIuKYg1wiLCBcIvCfkoVcIiwgXCLwn6SqXCIsIFwi8J+Xv1wiLCBcIvCfhpJcIiwgXCLwn5KYXCIsIFwi8J+ZiVwiLCBcIvCfpoRcIiwgXCLwn5iYXCIsIFwi8J+SilwiLCBcIvCfmYpcIiwgXCLwn5iOXCIsIFwi8J+RvlwiLCBcIvCfpLfigI3imYJcIiwgXCLwn6S3XCIsIFwi8J+kt+KAjeKZgFwiLCBcIvCfmKFcIiAqL1xuICBlbW9qaTpcbiAgICB8IFwi8J+RjVwiXG4gICAgfCBcIvCfkY5cIlxuICAgIHwgXCLinaRcIlxuICAgIHwgXCLwn5SlXCJcbiAgICB8IFwi8J+lsFwiXG4gICAgfCBcIvCfkY9cIlxuICAgIHwgXCLwn5iBXCJcbiAgICB8IFwi8J+klFwiXG4gICAgfCBcIvCfpK9cIlxuICAgIHwgXCLwn5ixXCJcbiAgICB8IFwi8J+krFwiXG4gICAgfCBcIvCfmKJcIlxuICAgIHwgXCLwn46JXCJcbiAgICB8IFwi8J+kqVwiXG4gICAgfCBcIvCfpK5cIlxuICAgIHwgXCLwn5KpXCJcbiAgICB8IFwi8J+Zj1wiXG4gICAgfCBcIvCfkYxcIlxuICAgIHwgXCLwn5WKXCJcbiAgICB8IFwi8J+koVwiXG4gICAgfCBcIvCfpbFcIlxuICAgIHwgXCLwn6W0XCJcbiAgICB8IFwi8J+YjVwiXG4gICAgfCBcIvCfkLNcIlxuICAgIHwgXCLinaTigI3wn5SlXCJcbiAgICB8IFwi8J+MmlwiXG4gICAgfCBcIvCfjK1cIlxuICAgIHwgXCLwn5KvXCJcbiAgICB8IFwi8J+ko1wiXG4gICAgfCBcIuKaoVwiXG4gICAgfCBcIvCfjYxcIlxuICAgIHwgXCLwn4+GXCJcbiAgICB8IFwi8J+SlFwiXG4gICAgfCBcIvCfpKhcIlxuICAgIHwgXCLwn5iQXCJcbiAgICB8IFwi8J+Nk1wiXG4gICAgfCBcIvCfjb5cIlxuICAgIHwgXCLwn5KLXCJcbiAgICB8IFwi8J+WlVwiXG4gICAgfCBcIvCfmIhcIlxuICAgIHwgXCLwn5i0XCJcbiAgICB8IFwi8J+YrVwiXG4gICAgfCBcIvCfpJNcIlxuICAgIHwgXCLwn5G7XCJcbiAgICB8IFwi8J+RqOKAjfCfkrtcIlxuICAgIHwgXCLwn5GAXCJcbiAgICB8IFwi8J+Og1wiXG4gICAgfCBcIvCfmYhcIlxuICAgIHwgXCLwn5iHXCJcbiAgICB8IFwi8J+YqFwiXG4gICAgfCBcIvCfpJ1cIlxuICAgIHwgXCLinI1cIlxuICAgIHwgXCLwn6SXXCJcbiAgICB8IFwi8J+roVwiXG4gICAgfCBcIvCfjoVcIlxuICAgIHwgXCLwn46EXCJcbiAgICB8IFwi4piDXCJcbiAgICB8IFwi8J+ShVwiXG4gICAgfCBcIvCfpKpcIlxuICAgIHwgXCLwn5e/XCJcbiAgICB8IFwi8J+GklwiXG4gICAgfCBcIvCfkphcIlxuICAgIHwgXCLwn5mJXCJcbiAgICB8IFwi8J+mhFwiXG4gICAgfCBcIvCfmJhcIlxuICAgIHwgXCLwn5KKXCJcbiAgICB8IFwi8J+ZilwiXG4gICAgfCBcIvCfmI5cIlxuICAgIHwgXCLwn5G+XCJcbiAgICB8IFwi8J+kt+KAjeKZglwiXG4gICAgfCBcIvCfpLdcIlxuICAgIHwgXCLwn6S34oCN4pmAXCJcbiAgICB8IFwi8J+YoVwiO1xufVxuXG4vKiogVGhlIHJlYWN0aW9uIGlzIGJhc2VkIG9uIGEgY3VzdG9tIGVtb2ppLiAqL1xuZXhwb3J0IGludGVyZmFjZSBSZWFjdGlvblR5cGVDdXN0b21FbW9qaSB7XG4gIC8qKiBUeXBlIG9mIHRoZSByZWFjdGlvbiwgYWx3YXlzIOKAnGN1c3RvbV9lbW9qaeKAnSAqL1xuICB0eXBlOiBcImN1c3RvbV9lbW9qaVwiO1xuICAvKiogQ3VzdG9tIGVtb2ppIGlkZW50aWZpZXIgKi9cbiAgY3VzdG9tX2Vtb2ppX2lkOiBzdHJpbmc7XG59XG5cbi8qKiBUaGUgcmVhY3Rpb24gaXMgcGFpZC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVhY3Rpb25UeXBlUGFpZCB7XG4gIC8qKiBUeXBlIG9mIHRoZSByZWFjdGlvbiwgYWx3YXlzIOKAnHBhaWTigJ0gKi9cbiAgdHlwZTogXCJwYWlkXCI7XG59XG5cbi8qKiBSZXByZXNlbnRzIGEgcmVhY3Rpb24gYWRkZWQgdG8gYSBtZXNzYWdlIGFsb25nIHdpdGggdGhlIG51bWJlciBvZiB0aW1lcyBpdCB3YXMgYWRkZWQuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlYWN0aW9uQ291bnQge1xuICAvKiogVHlwZSBvZiB0aGUgcmVhY3Rpb24gKi9cbiAgdHlwZTogUmVhY3Rpb25UeXBlO1xuICAvKiogTnVtYmVyIG9mIHRpbWVzIHRoZSByZWFjdGlvbiB3YXMgYWRkZWQgKi9cbiAgdG90YWxfY291bnQ6IG51bWJlcjtcbn1cblxuLyoqIFRoaXMgb2JqZWN0IHJlcHJlc2VudHMgYSBjaGFuZ2Ugb2YgYSByZWFjdGlvbiBvbiBhIG1lc3NhZ2UgcGVyZm9ybWVkIGJ5IGEgdXNlci4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZVJlYWN0aW9uVXBkYXRlZCB7XG4gIC8qKiBUaGUgY2hhdCBjb250YWluaW5nIHRoZSBtZXNzYWdlIHRoZSB1c2VyIHJlYWN0ZWQgdG8gKi9cbiAgY2hhdDogQ2hhdDtcbiAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBtZXNzYWdlIGluc2lkZSB0aGUgY2hhdCAqL1xuICBtZXNzYWdlX2lkOiBudW1iZXI7XG4gIC8qKiBUaGUgdXNlciB0aGF0IGNoYW5nZWQgdGhlIHJlYWN0aW9uLCBpZiB0aGUgdXNlciBpc24ndCBhbm9ueW1vdXMgKi9cbiAgdXNlcj86IFVzZXI7XG4gIC8qKiBUaGUgY2hhdCBvbiBiZWhhbGYgb2Ygd2hpY2ggdGhlIHJlYWN0aW9uIHdhcyBjaGFuZ2VkLCBpZiB0aGUgdXNlciBpcyBhbm9ueW1vdXMgKi9cbiAgYWN0b3JfY2hhdD86IENoYXQ7XG4gIC8qKiBEYXRlIG9mIHRoZSBjaGFuZ2UgaW4gVW5peCB0aW1lICovXG4gIGRhdGU6IG51bWJlcjtcbiAgLyoqIFByZXZpb3VzIGxpc3Qgb2YgcmVhY3Rpb24gdHlwZXMgdGhhdCB3ZXJlIHNldCBieSB0aGUgdXNlciAqL1xuICBvbGRfcmVhY3Rpb246IFJlYWN0aW9uVHlwZVtdO1xuICAvKiogTmV3IGxpc3Qgb2YgcmVhY3Rpb24gdHlwZXMgdGhhdCBoYXZlIGJlZW4gc2V0IGJ5IHRoZSB1c2VyICovXG4gIG5ld19yZWFjdGlvbjogUmVhY3Rpb25UeXBlW107XG59XG5cbi8qKiBUaGlzIG9iamVjdCByZXByZXNlbnRzIHJlYWN0aW9uIGNoYW5nZXMgb24gYSBtZXNzYWdlIHdpdGggYW5vbnltb3VzIHJlYWN0aW9ucy4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZVJlYWN0aW9uQ291bnRVcGRhdGVkIHtcbiAgLyoqIFRoZSBjaGF0IGNvbnRhaW5pbmcgdGhlIG1lc3NhZ2UgKi9cbiAgY2hhdDogQ2hhdDtcbiAgLyoqIFVuaXF1ZSBtZXNzYWdlIGlkZW50aWZpZXIgaW5zaWRlIHRoZSBjaGF0ICovXG4gIG1lc3NhZ2VfaWQ6IG51bWJlcjtcbiAgLyoqIERhdGUgb2YgdGhlIGNoYW5nZSBpbiBVbml4IHRpbWUgKi9cbiAgZGF0ZTogbnVtYmVyO1xuICAvKiogTGlzdCBvZiByZWFjdGlvbnMgdGhhdCBhcmUgcHJlc2VudCBvbiB0aGUgbWVzc2FnZSAqL1xuICByZWFjdGlvbnM6IFJlYWN0aW9uQ291bnRbXTtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0QifQ==